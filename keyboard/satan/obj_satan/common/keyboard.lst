   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.matrix_setup,"ax",@progbits
  11               		.weak	matrix_setup
  13               	matrix_setup:
  14               	.LFB103:
  15               		.file 1 "../../tmk_core/common/keyboard.c"
   1:../../tmk_core/common/keyboard.c **** /*
   2:../../tmk_core/common/keyboard.c **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/common/keyboard.c **** 
   4:../../tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core/common/keyboard.c **** (at your option) any later version.
   8:../../tmk_core/common/keyboard.c **** 
   9:../../tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:../../tmk_core/common/keyboard.c **** 
  14:../../tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:../../tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core/common/keyboard.c **** */
  17:../../tmk_core/common/keyboard.c **** #include <stdint.h>
  18:../../tmk_core/common/keyboard.c **** #include "keyboard.h"
  19:../../tmk_core/common/keyboard.c **** #include "matrix.h"
  20:../../tmk_core/common/keyboard.c **** #include "keymap.h"
  21:../../tmk_core/common/keyboard.c **** #include "host.h"
  22:../../tmk_core/common/keyboard.c **** #include "led.h"
  23:../../tmk_core/common/keyboard.c **** #include "keycode.h"
  24:../../tmk_core/common/keyboard.c **** #include "timer.h"
  25:../../tmk_core/common/keyboard.c **** #include "print.h"
  26:../../tmk_core/common/keyboard.c **** #include "debug.h"
  27:../../tmk_core/common/keyboard.c **** #include "command.h"
  28:../../tmk_core/common/keyboard.c **** #include "util.h"
  29:../../tmk_core/common/keyboard.c **** #include "sendchar.h"
  30:../../tmk_core/common/keyboard.c **** #include "bootmagic.h"
  31:../../tmk_core/common/keyboard.c **** #include "eeconfig.h"
  32:../../tmk_core/common/keyboard.c **** #include "backlight.h"
  33:../../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  34:../../tmk_core/common/keyboard.c **** #   include "mousekey.h"
  35:../../tmk_core/common/keyboard.c **** #endif
  36:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  37:../../tmk_core/common/keyboard.c **** #   include "ps2_mouse.h"
  38:../../tmk_core/common/keyboard.c **** #endif
  39:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  40:../../tmk_core/common/keyboard.c **** #include "serial_mouse.h"
  41:../../tmk_core/common/keyboard.c **** #endif
  42:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  43:../../tmk_core/common/keyboard.c **** #include "adb.h"
  44:../../tmk_core/common/keyboard.c **** #endif
  45:../../tmk_core/common/keyboard.c **** 
  46:../../tmk_core/common/keyboard.c **** 
  47:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  48:../../tmk_core/common/keyboard.c **** static bool has_ghost_in_row(uint8_t row)
  49:../../tmk_core/common/keyboard.c **** {
  50:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = matrix_get_row(row);
  51:../../tmk_core/common/keyboard.c ****     // No ghost exists when less than 2 keys are down on the row
  52:../../tmk_core/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
  53:../../tmk_core/common/keyboard.c ****         return false;
  54:../../tmk_core/common/keyboard.c **** 
  55:../../tmk_core/common/keyboard.c ****     // Ghost occurs when the row shares column line with other row
  56:../../tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
  57:../../tmk_core/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
  58:../../tmk_core/common/keyboard.c ****             return true;
  59:../../tmk_core/common/keyboard.c ****     }
  60:../../tmk_core/common/keyboard.c ****     return false;
  61:../../tmk_core/common/keyboard.c **** }
  62:../../tmk_core/common/keyboard.c **** #endif
  63:../../tmk_core/common/keyboard.c **** 
  64:../../tmk_core/common/keyboard.c **** 
  65:../../tmk_core/common/keyboard.c **** __attribute__ ((weak)) void matrix_setup(void) {}
  16               		.loc 1 65 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22 0000 0895      		ret
  23               		.cfi_endproc
  24               	.LFE103:
  26               		.section	.text.keyboard_setup,"ax",@progbits
  27               	.global	keyboard_setup
  29               	keyboard_setup:
  30               	.LFB104:
  66:../../tmk_core/common/keyboard.c **** void keyboard_setup(void)
  67:../../tmk_core/common/keyboard.c **** {
  31               		.loc 1 67 0
  32               		.cfi_startproc
  33               	/* prologue: function */
  34               	/* frame size = 0 */
  35               	/* stack size = 0 */
  36               	.L__stack_usage = 0
  68:../../tmk_core/common/keyboard.c ****     matrix_setup();
  37               		.loc 1 68 0
  38 0000 0C94 0000 		jmp matrix_setup
  39               	.LVL0:
  40               		.cfi_endproc
  41               	.LFE104:
  43               		.section	.text.keyboard_init,"ax",@progbits
  44               	.global	keyboard_init
  46               	keyboard_init:
  47               	.LFB105:
  69:../../tmk_core/common/keyboard.c **** }
  70:../../tmk_core/common/keyboard.c **** 
  71:../../tmk_core/common/keyboard.c **** void keyboard_init(void)
  72:../../tmk_core/common/keyboard.c **** {
  48               		.loc 1 72 0
  49               		.cfi_startproc
  50               	/* prologue: function */
  51               	/* frame size = 0 */
  52               	/* stack size = 0 */
  53               	.L__stack_usage = 0
  73:../../tmk_core/common/keyboard.c ****     timer_init();
  54               		.loc 1 73 0
  55 0000 0E94 0000 		call timer_init
  56               	.LVL1:
  74:../../tmk_core/common/keyboard.c ****     matrix_init();
  57               		.loc 1 74 0
  58 0004 0E94 0000 		call matrix_init
  59               	.LVL2:
  75:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  76:../../tmk_core/common/keyboard.c ****     ps2_mouse_init();
  77:../../tmk_core/common/keyboard.c **** #endif
  78:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  79:../../tmk_core/common/keyboard.c ****     serial_mouse_init();
  80:../../tmk_core/common/keyboard.c **** #endif
  81:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  82:../../tmk_core/common/keyboard.c ****     adb_mouse_init();
  83:../../tmk_core/common/keyboard.c **** #endif
  84:../../tmk_core/common/keyboard.c **** 
  85:../../tmk_core/common/keyboard.c **** 
  86:../../tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  87:../../tmk_core/common/keyboard.c ****     bootmagic();
  60               		.loc 1 87 0
  61 0008 0E94 0000 		call bootmagic
  62               	.LVL3:
  88:../../tmk_core/common/keyboard.c **** #endif
  89:../../tmk_core/common/keyboard.c **** 
  90:../../tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
  91:../../tmk_core/common/keyboard.c ****     backlight_init();
  63               		.loc 1 91 0
  64 000c 0C94 0000 		jmp backlight_init
  65               	.LVL4:
  66               		.cfi_endproc
  67               	.LFE105:
  69               		.section	.text.keyboard_set_leds,"ax",@progbits
  70               	.global	keyboard_set_leds
  72               	keyboard_set_leds:
  73               	.LFB107:
  92:../../tmk_core/common/keyboard.c **** #endif
  93:../../tmk_core/common/keyboard.c **** }
  94:../../tmk_core/common/keyboard.c **** 
  95:../../tmk_core/common/keyboard.c **** /*
  96:../../tmk_core/common/keyboard.c ****  * Do keyboard routine jobs: scan mantrix, light LEDs, ...
  97:../../tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
  98:../../tmk_core/common/keyboard.c ****  */
  99:../../tmk_core/common/keyboard.c **** void keyboard_task(void)
 100:../../tmk_core/common/keyboard.c **** {
 101:../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 102:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 103:../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_ghost[MATRIX_ROWS];
 104:../../tmk_core/common/keyboard.c **** #endif
 105:../../tmk_core/common/keyboard.c ****     static uint8_t led_status = 0;
 106:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 107:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 108:../../tmk_core/common/keyboard.c **** 
 109:../../tmk_core/common/keyboard.c ****     matrix_scan();
 110:../../tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 111:../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 112:../../tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 113:../../tmk_core/common/keyboard.c ****         if (matrix_change) {
 114:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 115:../../tmk_core/common/keyboard.c ****             if (has_ghost_in_row(r)) {
 116:../../tmk_core/common/keyboard.c ****                 /* Keep track of whether ghosted status has changed for
 117:../../tmk_core/common/keyboard.c ****                  * debugging. But don't update matrix_prev until un-ghosted, or
 118:../../tmk_core/common/keyboard.c ****                  * the last key would be lost.
 119:../../tmk_core/common/keyboard.c ****                  */
 120:../../tmk_core/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 121:../../tmk_core/common/keyboard.c ****                     matrix_print();
 122:../../tmk_core/common/keyboard.c ****                 }
 123:../../tmk_core/common/keyboard.c ****                 matrix_ghost[r] = matrix_row;
 124:../../tmk_core/common/keyboard.c ****                 continue;
 125:../../tmk_core/common/keyboard.c ****             }
 126:../../tmk_core/common/keyboard.c ****             matrix_ghost[r] = matrix_row;
 127:../../tmk_core/common/keyboard.c **** #endif
 128:../../tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 129:../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 130:../../tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 131:../../tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 132:../../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 133:../../tmk_core/common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 134:../../tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 135:../../tmk_core/common/keyboard.c ****                     });
 136:../../tmk_core/common/keyboard.c ****                     // record a processed key
 137:../../tmk_core/common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 138:../../tmk_core/common/keyboard.c ****                     // process a key per task call
 139:../../tmk_core/common/keyboard.c ****                     goto MATRIX_LOOP_END;
 140:../../tmk_core/common/keyboard.c ****                 }
 141:../../tmk_core/common/keyboard.c ****             }
 142:../../tmk_core/common/keyboard.c ****         }
 143:../../tmk_core/common/keyboard.c ****     }
 144:../../tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 145:../../tmk_core/common/keyboard.c ****     action_exec(TICK);
 146:../../tmk_core/common/keyboard.c **** 
 147:../../tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 148:../../tmk_core/common/keyboard.c **** 
 149:../../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 150:../../tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 151:../../tmk_core/common/keyboard.c ****     mousekey_task();
 152:../../tmk_core/common/keyboard.c **** #endif
 153:../../tmk_core/common/keyboard.c **** 
 154:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 155:../../tmk_core/common/keyboard.c ****     ps2_mouse_task();
 156:../../tmk_core/common/keyboard.c **** #endif
 157:../../tmk_core/common/keyboard.c **** 
 158:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 159:../../tmk_core/common/keyboard.c ****         serial_mouse_task();
 160:../../tmk_core/common/keyboard.c **** #endif
 161:../../tmk_core/common/keyboard.c **** 
 162:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 163:../../tmk_core/common/keyboard.c ****         adb_mouse_task();
 164:../../tmk_core/common/keyboard.c **** #endif
 165:../../tmk_core/common/keyboard.c **** 
 166:../../tmk_core/common/keyboard.c ****     // update LED
 167:../../tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 168:../../tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 169:../../tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 170:../../tmk_core/common/keyboard.c ****     }
 171:../../tmk_core/common/keyboard.c **** }
 172:../../tmk_core/common/keyboard.c **** 
 173:../../tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 174:../../tmk_core/common/keyboard.c **** {
  74               		.loc 1 174 0
  75               		.cfi_startproc
  76               	.LVL5:
  77               	/* prologue: function */
  78               	/* frame size = 0 */
  79               	/* stack size = 0 */
  80               	.L__stack_usage = 0
 175:../../tmk_core/common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
 176:../../tmk_core/common/keyboard.c ****     led_set(leds);
  81               		.loc 1 176 0
  82 0000 0C94 0000 		jmp led_set
  83               	.LVL6:
  84               		.cfi_endproc
  85               	.LFE107:
  87               		.section	.text.keyboard_task,"ax",@progbits
  88               	.global	keyboard_task
  90               	keyboard_task:
  91               	.LFB106:
 100:../../tmk_core/common/keyboard.c **** {
  92               		.loc 1 100 0
  93               		.cfi_startproc
  94 0000 5F92      		push r5
  95               	.LCFI0:
  96               		.cfi_def_cfa_offset 3
  97               		.cfi_offset 5, -2
  98 0002 6F92      		push r6
  99               	.LCFI1:
 100               		.cfi_def_cfa_offset 4
 101               		.cfi_offset 6, -3
 102 0004 7F92      		push r7
 103               	.LCFI2:
 104               		.cfi_def_cfa_offset 5
 105               		.cfi_offset 7, -4
 106 0006 8F92      		push r8
 107               	.LCFI3:
 108               		.cfi_def_cfa_offset 6
 109               		.cfi_offset 8, -5
 110 0008 9F92      		push r9
 111               	.LCFI4:
 112               		.cfi_def_cfa_offset 7
 113               		.cfi_offset 9, -6
 114 000a AF92      		push r10
 115               	.LCFI5:
 116               		.cfi_def_cfa_offset 8
 117               		.cfi_offset 10, -7
 118 000c BF92      		push r11
 119               	.LCFI6:
 120               		.cfi_def_cfa_offset 9
 121               		.cfi_offset 11, -8
 122 000e CF92      		push r12
 123               	.LCFI7:
 124               		.cfi_def_cfa_offset 10
 125               		.cfi_offset 12, -9
 126 0010 DF92      		push r13
 127               	.LCFI8:
 128               		.cfi_def_cfa_offset 11
 129               		.cfi_offset 13, -10
 130 0012 EF92      		push r14
 131               	.LCFI9:
 132               		.cfi_def_cfa_offset 12
 133               		.cfi_offset 14, -11
 134 0014 FF92      		push r15
 135               	.LCFI10:
 136               		.cfi_def_cfa_offset 13
 137               		.cfi_offset 15, -12
 138 0016 0F93      		push r16
 139               	.LCFI11:
 140               		.cfi_def_cfa_offset 14
 141               		.cfi_offset 16, -13
 142 0018 1F93      		push r17
 143               	.LCFI12:
 144               		.cfi_def_cfa_offset 15
 145               		.cfi_offset 17, -14
 146 001a CF93      		push r28
 147               	.LCFI13:
 148               		.cfi_def_cfa_offset 16
 149               		.cfi_offset 28, -15
 150 001c DF93      		push r29
 151               	.LCFI14:
 152               		.cfi_def_cfa_offset 17
 153               		.cfi_offset 29, -16
 154 001e CDB7      		in r28,__SP_L__
 155 0020 DEB7      		in r29,__SP_H__
 156               	.LCFI15:
 157               		.cfi_def_cfa_register 28
 158 0022 2A97      		sbiw r28,10
 159               	.LCFI16:
 160               		.cfi_def_cfa_offset 27
 161 0024 0FB6      		in __tmp_reg__,__SREG__
 162 0026 F894      		cli
 163 0028 DEBF      		out __SP_H__,r29
 164 002a 0FBE      		out __SREG__,__tmp_reg__
 165 002c CDBF      		out __SP_L__,r28
 166               	/* prologue: function */
 167               	/* frame size = 10 */
 168               	/* stack size = 25 */
 169               	.L__stack_usage = 25
 170               	.LVL7:
 109:../../tmk_core/common/keyboard.c ****     matrix_scan();
 171               		.loc 1 109 0
 172 002e 0E94 0000 		call matrix_scan
 173               	.LVL8:
 174 0032 90E0      		ldi r25,lo8(matrix_prev.4583)
 175 0034 C92E      		mov r12,r25
 176 0036 90E0      		ldi r25,hi8(matrix_prev.4583)
 177 0038 D92E      		mov r13,r25
 178 003a 00E0      		ldi r16,0
 179 003c 10E0      		ldi r17,0
 180               	.LBB2:
 181               	.LBB3:
 130:../../tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 182               		.loc 1 130 0
 183 003e AA24      		clr r10
 184 0040 A394      		inc r10
 185 0042 B12C      		mov r11,__zero_reg__
 186               	.LVL9:
 187               	.L7:
 188 0044 502E      		mov r5,r16
 189               	.LBE3:
 111:../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 190               		.loc 1 111 0
 191 0046 802F      		mov r24,r16
 192 0048 0E94 0000 		call matrix_get_row
 193               	.LVL10:
 194 004c 3C01      		movw r6,r24
 195               	.LVL11:
 112:../../tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 196               		.loc 1 112 0
 197 004e F601      		movw r30,r12
 198 0050 E190      		ld r14,Z+
 199 0052 F190      		ld r15,Z+
 200 0054 6F01      		movw r12,r30
 201 0056 E826      		eor r14,r24
 202 0058 F926      		eor r15,r25
 203               	.LVL12:
 113:../../tmk_core/common/keyboard.c ****         if (matrix_change) {
 204               		.loc 1 113 0
 205 005a E114      		cp r14,__zero_reg__
 206 005c F104      		cpc r15,__zero_reg__
 207 005e 01F4      		brne .L6
 208               	.L14:
 209 0060 0F5F      		subi r16,-1
 210 0062 1F4F      		sbci r17,-1
 110:../../tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 211               		.loc 1 110 0
 212 0064 0530      		cpi r16,5
 213 0066 1105      		cpc r17,__zero_reg__
 214 0068 01F4      		brne .L7
 215 006a 00C0      		rjmp .L21
 216               	.L6:
 128:../../tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 217               		.loc 1 128 0
 218 006c 8091 0000 		lds r24,debug_config
 219 0070 81FD      		sbrc r24,1
 128:../../tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 220               		.loc 1 128 0 is_stmt 0 discriminator 1
 221 0072 0E94 0000 		call matrix_print
 222               	.LVL13:
 223               	.L9:
 224               	.LBE2:
 109:../../tmk_core/common/keyboard.c ****     matrix_scan();
 225               		.loc 1 109 0 is_stmt 1
 226 0076 20E0      		ldi r18,0
 227 0078 30E0      		ldi r19,0
 228               	.LVL14:
 229               	.L13:
 230               	.LBB5:
 231               	.LBB4:
 130:../../tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 232               		.loc 1 130 0
 233 007a 4501      		movw r8,r10
 234 007c 022E      		mov r0,r18
 235 007e 00C0      		rjmp 2f
 236               		1:
 237 0080 880C      		lsl r8
 238 0082 991C      		rol r9
 239               		2:
 240 0084 0A94      		dec r0
 241 0086 02F4      		brpl 1b
 242 0088 C401      		movw r24,r8
 243 008a 8E21      		and r24,r14
 244 008c 9F21      		and r25,r15
 245 008e 892B      		or r24,r25
 246 0090 01F0      		breq .L10
 131:../../tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 247               		.loc 1 131 0
 248 0092 2E83      		std Y+6,r18
 249 0094 5F82      		std Y+7,r5
 133:../../tmk_core/common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 250               		.loc 1 133 0
 251 0096 6820      		and r6,r8
 252 0098 7920      		and r7,r9
 253               	.LVL15:
 254 009a 81E0      		ldi r24,lo8(1)
 255 009c 6728      		or r6,r7
 256 009e 01F4      		brne .L11
 257 00a0 80E0      		ldi r24,0
 258               	.L11:
 131:../../tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 259               		.loc 1 131 0
 260 00a2 8887      		std Y+8,r24
 134:../../tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 261               		.loc 1 134 0
 262 00a4 0E94 0000 		call timer_read
 263               	.LVL16:
 264 00a8 8160      		ori r24,1
 131:../../tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 265               		.loc 1 131 0
 266 00aa 782F      		mov r23,r24
 267 00ac 9A87      		std Y+10,r25
 268 00ae 8987      		std Y+9,r24
 269 00b0 4E81      		ldd r20,Y+6
 270 00b2 5F81      		ldd r21,Y+7
 271 00b4 6885      		ldd r22,Y+8
 272 00b6 8A85      		ldd r24,Y+10
 273 00b8 0E94 0000 		call action_exec
 274               	.LVL17:
 137:../../tmk_core/common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 275               		.loc 1 137 0
 276 00bc F801      		movw r30,r16
 277 00be EE0F      		lsl r30
 278 00c0 FF1F      		rol r31
 279 00c2 E050      		subi r30,lo8(-(matrix_prev.4583))
 280 00c4 F040      		sbci r31,hi8(-(matrix_prev.4583))
 281 00c6 8081      		ld r24,Z
 282 00c8 9181      		ldd r25,Z+1
 283 00ca 8825      		eor r24,r8
 284 00cc 9925      		eor r25,r9
 285 00ce 9183      		std Z+1,r25
 286 00d0 8083      		st Z,r24
 139:../../tmk_core/common/keyboard.c ****                     goto MATRIX_LOOP_END;
 287               		.loc 1 139 0
 288 00d2 00C0      		rjmp .L12
 289               	.LVL18:
 290               	.L10:
 291 00d4 2F5F      		subi r18,-1
 292 00d6 3F4F      		sbci r19,-1
 129:../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 293               		.loc 1 129 0
 294 00d8 2E30      		cpi r18,14
 295 00da 3105      		cpc r19,__zero_reg__
 296 00dc 01F4      		brne .L13
 297 00de 00C0      		rjmp .L14
 298               	.L21:
 299               	.LBE4:
 300               	.LBE5:
 145:../../tmk_core/common/keyboard.c ****     action_exec(TICK);
 301               		.loc 1 145 0
 302 00e0 8FEF      		ldi r24,lo8(-1)
 303 00e2 8983      		std Y+1,r24
 304 00e4 8A83      		std Y+2,r24
 305 00e6 1B82      		std Y+3,__zero_reg__
 306 00e8 0E94 0000 		call timer_read
 307               	.LVL19:
 308 00ec 8160      		ori r24,1
 309 00ee 782F      		mov r23,r24
 310 00f0 9D83      		std Y+5,r25
 311 00f2 8C83      		std Y+4,r24
 312 00f4 4981      		ldd r20,Y+1
 313 00f6 5A81      		ldd r21,Y+2
 314 00f8 6B81      		ldd r22,Y+3
 315 00fa 8D81      		ldd r24,Y+5
 316 00fc 0E94 0000 		call action_exec
 317               	.LVL20:
 318               	.L12:
 151:../../tmk_core/common/keyboard.c ****     mousekey_task();
 319               		.loc 1 151 0
 320 0100 0E94 0000 		call mousekey_task
 321               	.LVL21:
 167:../../tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 322               		.loc 1 167 0
 323 0104 1091 0000 		lds r17,led_status.4584
 324 0108 0E94 0000 		call host_keyboard_leds
 325               	.LVL22:
 326 010c 1817      		cp r17,r24
 327 010e 01F0      		breq .L5
 168:../../tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 328               		.loc 1 168 0
 329 0110 0E94 0000 		call host_keyboard_leds
 330               	.LVL23:
 331 0114 8093 0000 		sts led_status.4584,r24
 332               	/* epilogue start */
 171:../../tmk_core/common/keyboard.c **** }
 333               		.loc 1 171 0
 334 0118 2A96      		adiw r28,10
 335 011a 0FB6      		in __tmp_reg__,__SREG__
 336 011c F894      		cli
 337 011e DEBF      		out __SP_H__,r29
 338 0120 0FBE      		out __SREG__,__tmp_reg__
 339 0122 CDBF      		out __SP_L__,r28
 340 0124 DF91      		pop r29
 341 0126 CF91      		pop r28
 342 0128 1F91      		pop r17
 343 012a 0F91      		pop r16
 344 012c FF90      		pop r15
 345 012e EF90      		pop r14
 346               	.LVL24:
 347 0130 DF90      		pop r13
 348 0132 CF90      		pop r12
 349 0134 BF90      		pop r11
 350 0136 AF90      		pop r10
 351 0138 9F90      		pop r9
 352 013a 8F90      		pop r8
 353 013c 7F90      		pop r7
 354 013e 6F90      		pop r6
 355 0140 5F90      		pop r5
 169:../../tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 356               		.loc 1 169 0
 357 0142 0C94 0000 		jmp keyboard_set_leds
 358               	.LVL25:
 359               	.L5:
 360               	/* epilogue start */
 171:../../tmk_core/common/keyboard.c **** }
 361               		.loc 1 171 0
 362 0146 2A96      		adiw r28,10
 363 0148 0FB6      		in __tmp_reg__,__SREG__
 364 014a F894      		cli
 365 014c DEBF      		out __SP_H__,r29
 366 014e 0FBE      		out __SREG__,__tmp_reg__
 367 0150 CDBF      		out __SP_L__,r28
 368 0152 DF91      		pop r29
 369 0154 CF91      		pop r28
 370 0156 1F91      		pop r17
 371 0158 0F91      		pop r16
 372 015a FF90      		pop r15
 373 015c EF90      		pop r14
 374               	.LVL26:
 375 015e DF90      		pop r13
 376 0160 CF90      		pop r12
 377 0162 BF90      		pop r11
 378 0164 AF90      		pop r10
 379 0166 9F90      		pop r9
 380 0168 8F90      		pop r8
 381 016a 7F90      		pop r7
 382 016c 6F90      		pop r6
 383 016e 5F90      		pop r5
 384 0170 0895      		ret
 385               		.cfi_endproc
 386               	.LFE106:
 388               		.comm	keymap_config,1,1
 389               		.section	.bss.matrix_prev.4583,"aw",@nobits
 392               	matrix_prev.4583:
 393 0000 0000 0000 		.zero	10
 393      0000 0000 
 393      0000 
 394               		.section	.bss.led_status.4584,"aw",@nobits
 397               	led_status.4584:
 398 0000 00        		.zero	1
 399               		.text
 400               	.Letext0:
 401               		.file 2 "d:\\applications\\keyboard\\avr-gcc-4.7.2-mingw32\\bin\\../lib/gcc/avr/4.7.2/../../../../
 402               		.file 3 "../../tmk_core/common/keyboard.h"
 403               		.file 4 "../../tmk_core/common/matrix.h"
 404               		.file 5 "../../tmk_core/common/keymap.h"
 405               		.file 6 "../../tmk_core/common/debug.h"
 406               		.file 7 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 407               		.file 8 "../../tmk_core/common/timer.h"
 408               		.file 9 "../../tmk_core/common/bootmagic.h"
 409               		.file 10 "../../tmk_core/common/backlight.h"
 410               		.file 11 "../../tmk_core/common/led.h"
 411               		.file 12 "../../tmk_core/common/action.h"
 412               		.file 13 "../../tmk_core/common/mousekey.h"
 413               		.file 14 "../../tmk_core/common/host.h"
DEFINED SYMBOLS
                            *ABS*:00000000 keyboard.c
C:\Users\tiny\AppData\Local\Temp\cc5hdaPe.s:2      *ABS*:0000003e __SP_H__
C:\Users\tiny\AppData\Local\Temp\cc5hdaPe.s:3      *ABS*:0000003d __SP_L__
C:\Users\tiny\AppData\Local\Temp\cc5hdaPe.s:4      *ABS*:0000003f __SREG__
C:\Users\tiny\AppData\Local\Temp\cc5hdaPe.s:5      *ABS*:00000000 __tmp_reg__
C:\Users\tiny\AppData\Local\Temp\cc5hdaPe.s:6      *ABS*:00000001 __zero_reg__
C:\Users\tiny\AppData\Local\Temp\cc5hdaPe.s:13     .text.matrix_setup:00000000 matrix_setup
C:\Users\tiny\AppData\Local\Temp\cc5hdaPe.s:29     .text.keyboard_setup:00000000 keyboard_setup
C:\Users\tiny\AppData\Local\Temp\cc5hdaPe.s:46     .text.keyboard_init:00000000 keyboard_init
C:\Users\tiny\AppData\Local\Temp\cc5hdaPe.s:72     .text.keyboard_set_leds:00000000 keyboard_set_leds
C:\Users\tiny\AppData\Local\Temp\cc5hdaPe.s:90     .text.keyboard_task:00000000 keyboard_task
C:\Users\tiny\AppData\Local\Temp\cc5hdaPe.s:392    .bss.matrix_prev.4583:00000000 matrix_prev.4583
C:\Users\tiny\AppData\Local\Temp\cc5hdaPe.s:397    .bss.led_status.4584:00000000 led_status.4584
                            *COM*:00000001 keymap_config

UNDEFINED SYMBOLS
timer_init
matrix_init
bootmagic
backlight_init
led_set
matrix_scan
matrix_get_row
debug_config
matrix_print
timer_read
action_exec
mousekey_task
host_keyboard_leds
__do_clear_bss
