   1               		.file	"descriptor.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.CALLBACK_USB_GetDescriptor,"ax",@progbits
  11               	.global	CALLBACK_USB_GetDescriptor
  13               	CALLBACK_USB_GetDescriptor:
  14               	.LFB100:
  15               		.file 1 "../../tmk_core/protocol/lufa/descriptor.c"
   1:../../tmk_core/protocol/lufa/descriptor.c **** /* 
   2:../../tmk_core/protocol/lufa/descriptor.c ****  * Copyright 2012 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/protocol/lufa/descriptor.c ****  * This file is based on:
   4:../../tmk_core/protocol/lufa/descriptor.c ****  *     LUFA-120219/Demos/Device/Lowlevel/KeyboardMouse
   5:../../tmk_core/protocol/lufa/descriptor.c ****  *     LUFA-120219/Demos/Device/Lowlevel/GenericHID
   6:../../tmk_core/protocol/lufa/descriptor.c ****  */
   7:../../tmk_core/protocol/lufa/descriptor.c **** 
   8:../../tmk_core/protocol/lufa/descriptor.c **** /*
   9:../../tmk_core/protocol/lufa/descriptor.c ****              LUFA Library
  10:../../tmk_core/protocol/lufa/descriptor.c ****      Copyright (C) Dean Camera, 2012.
  11:../../tmk_core/protocol/lufa/descriptor.c **** 
  12:../../tmk_core/protocol/lufa/descriptor.c ****   dean [at] fourwalledcubicle [dot] com
  13:../../tmk_core/protocol/lufa/descriptor.c ****            www.lufa-lib.org
  14:../../tmk_core/protocol/lufa/descriptor.c **** */
  15:../../tmk_core/protocol/lufa/descriptor.c **** 
  16:../../tmk_core/protocol/lufa/descriptor.c **** /*
  17:../../tmk_core/protocol/lufa/descriptor.c ****   Copyright 2012  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  18:../../tmk_core/protocol/lufa/descriptor.c ****   Copyright 2010  Denver Gingerich (denver [at] ossguy [dot] com)
  19:../../tmk_core/protocol/lufa/descriptor.c **** 
  20:../../tmk_core/protocol/lufa/descriptor.c ****   Permission to use, copy, modify, distribute, and sell this
  21:../../tmk_core/protocol/lufa/descriptor.c ****   software and its documentation for any purpose is hereby granted
  22:../../tmk_core/protocol/lufa/descriptor.c ****   without fee, provided that the above copyright notice appear in
  23:../../tmk_core/protocol/lufa/descriptor.c ****   all copies and that both that the copyright notice and this
  24:../../tmk_core/protocol/lufa/descriptor.c ****   permission notice and warranty disclaimer appear in supporting
  25:../../tmk_core/protocol/lufa/descriptor.c ****   documentation, and that the name of the author not be used in
  26:../../tmk_core/protocol/lufa/descriptor.c ****   advertising or publicity pertaining to distribution of the
  27:../../tmk_core/protocol/lufa/descriptor.c ****   software without specific, written prior permission.
  28:../../tmk_core/protocol/lufa/descriptor.c **** 
  29:../../tmk_core/protocol/lufa/descriptor.c ****   The author disclaim all warranties with regard to this
  30:../../tmk_core/protocol/lufa/descriptor.c ****   software, including all implied warranties of merchantability
  31:../../tmk_core/protocol/lufa/descriptor.c ****   and fitness.  In no event shall the author be liable for any
  32:../../tmk_core/protocol/lufa/descriptor.c ****   special, indirect or consequential damages or any damages
  33:../../tmk_core/protocol/lufa/descriptor.c ****   whatsoever resulting from loss of use, data or profits, whether
  34:../../tmk_core/protocol/lufa/descriptor.c ****   in an action of contract, negligence or other tortious action,
  35:../../tmk_core/protocol/lufa/descriptor.c ****   arising out of or in connection with the use or performance of
  36:../../tmk_core/protocol/lufa/descriptor.c ****   this software.
  37:../../tmk_core/protocol/lufa/descriptor.c **** */
  38:../../tmk_core/protocol/lufa/descriptor.c **** 
  39:../../tmk_core/protocol/lufa/descriptor.c **** #include "util.h"
  40:../../tmk_core/protocol/lufa/descriptor.c **** #include "report.h"
  41:../../tmk_core/protocol/lufa/descriptor.c **** #include "descriptor.h"
  42:../../tmk_core/protocol/lufa/descriptor.c **** 
  43:../../tmk_core/protocol/lufa/descriptor.c **** 
  44:../../tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
  45:../../tmk_core/protocol/lufa/descriptor.c ****  * HID Report Descriptors
  46:../../tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
  47:../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM KeyboardReport[] =
  48:../../tmk_core/protocol/lufa/descriptor.c **** {
  49:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
  50:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x06), /* Keyboard */
  51:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
  52:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
  53:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0xE0), /* Keyboard Left Control */
  54:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xE7), /* Keyboard Right GUI */
  55:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
  56:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
  57:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x08),
  58:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
  59:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
  60:../../tmk_core/protocol/lufa/descriptor.c **** 
  61:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
  62:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
  63:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_CONSTANT),  /* reserved */
  64:../../tmk_core/protocol/lufa/descriptor.c **** 
  65:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x08), /* LEDs */
  66:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x01), /* Num Lock */
  67:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0x05), /* Kana */
  68:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x05),
  69:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
  70:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
  71:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
  72:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x03),
  73:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_CONSTANT),
  74:../../tmk_core/protocol/lufa/descriptor.c **** 
  75:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Keyboard */
  76:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x00), /* Reserved (no event indicated) */
  77:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xFF), /* Keyboard Application */
  78:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
  79:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0xFF),
  80:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x06),
  81:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
  82:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
  83:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
  84:../../tmk_core/protocol/lufa/descriptor.c **** };
  85:../../tmk_core/protocol/lufa/descriptor.c **** 
  86:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
  87:../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM MouseReport[] =
  88:../../tmk_core/protocol/lufa/descriptor.c **** {
  89:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
  90:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x02), /* Mouse */
  91:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
  92:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x01), /* Pointer */
  93:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_COLLECTION(8, 0x00), /* Physical */
  94:../../tmk_core/protocol/lufa/descriptor.c **** 
  95:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x09), /* Button */
  96:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_MINIMUM(8, 0x01),  /* Button 1 */
  97:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_MAXIMUM(8, 0x05),  /* Button 5 */
  98:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, 0x00),
  99:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 100:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x05),
 101:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x01),
 102:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 103:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 104:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x03),
 105:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_CONSTANT),
 106:../../tmk_core/protocol/lufa/descriptor.c **** 
 107:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 108:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x30), /* Usage X */
 109:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x31), /* Usage Y */
 110:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 111:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 112:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x02),
 113:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 114:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 115:../../tmk_core/protocol/lufa/descriptor.c **** 
 116:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x38), /* Wheel */
 117:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 118:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 119:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 120:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 121:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 122:../../tmk_core/protocol/lufa/descriptor.c **** 
 123:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x0C), /* Consumer */
 124:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(16, 0x0238), /* AC Pan (Horizontal wheel) */
 125:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 126:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 127:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 128:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 129:../../tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 130:../../tmk_core/protocol/lufa/descriptor.c **** 
 131:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_END_COLLECTION(0),
 132:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 133:../../tmk_core/protocol/lufa/descriptor.c **** };
 134:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 135:../../tmk_core/protocol/lufa/descriptor.c **** 
 136:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 137:../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM ExtrakeyReport[] =
 138:../../tmk_core/protocol/lufa/descriptor.c **** {
 139:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 140:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x80), /* System Control */
 141:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 142:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_ID(8, REPORT_ID_SYSTEM),
 143:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(16, 0x0001),
 144:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00B7),
 145:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(16, 0x0001), /* System Power Down */
 146:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(16, 0x00B7), /* System Display LCD Autoscale */
 147:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 16),
 148:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 1),
 149:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
 150:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 151:../../tmk_core/protocol/lufa/descriptor.c **** 
 152:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x0C), /* Consumer */
 153:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x01), /* Consumer Control */
 154:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 155:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_ID(8, REPORT_ID_CONSUMER),
 156:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(16, 0x0001),
 157:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x029C),
 158:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(16, 0x0001), /* +10 */
 159:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(16, 0x029C), /* AC Distribute Vertically */
 160:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 16),
 161:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 1),
 162:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
 163:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 164:../../tmk_core/protocol/lufa/descriptor.c **** };
 165:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 166:../../tmk_core/protocol/lufa/descriptor.c **** 
 167:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 168:../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM ConsoleReport[] =
 169:../../tmk_core/protocol/lufa/descriptor.c **** {
 170:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(16, 0xFF31), /* Vendor Page(PJRC Teensy compatible) */
 171:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x74), /* Vendor Usage(PJRC Teensy compatible) */
 172:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 173:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x75), /* Vendor Usage 0x75 */
 174:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 175:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0xFF),
 176:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, CONSOLE_EPSIZE),
 177:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
 178:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 179:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x76), /* Vendor Usage 0x76 */
 180:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 181:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0xFF),
 182:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, CONSOLE_EPSIZE),
 183:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
 184:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
 185:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 186:../../tmk_core/protocol/lufa/descriptor.c **** };
 187:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 188:../../tmk_core/protocol/lufa/descriptor.c **** 
 189:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 190:../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM NKROReport[] =
 191:../../tmk_core/protocol/lufa/descriptor.c **** {
 192:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 193:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x06), /* Keyboard */
 194:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 195:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
 196:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0xE0), /* Keyboard Left Control */
 197:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xE7), /* Keyboard Right GUI */
 198:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 199:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 200:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x08),
 201:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 202:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 203:../../tmk_core/protocol/lufa/descriptor.c **** 
 204:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x08), /* LEDs */
 205:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x01), /* Num Lock */
 206:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0x05), /* Kana */
 207:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x05),
 208:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 209:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
 210:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
 211:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x03),
 212:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_CONSTANT),
 213:../../tmk_core/protocol/lufa/descriptor.c **** 
 214:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
 215:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x00), /* Keyboard 0 */
 216:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, (NKRO_EPSIZE-1)*8-1), /* Keyboard Right GUI */
 217:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 218:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 219:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, (NKRO_EPSIZE-1)*8),
 220:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 221:../../tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 222:../../tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 223:../../tmk_core/protocol/lufa/descriptor.c **** };
 224:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 225:../../tmk_core/protocol/lufa/descriptor.c **** 
 226:../../tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
 227:../../tmk_core/protocol/lufa/descriptor.c ****  * Device Descriptors
 228:../../tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
 229:../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_Device_t PROGMEM DeviceDescriptor =
 230:../../tmk_core/protocol/lufa/descriptor.c **** {
 231:../../tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = sizeof(USB_Descriptor_Device_t), .Type = DTYPE_Device},
 232:../../tmk_core/protocol/lufa/descriptor.c **** 
 233:../../tmk_core/protocol/lufa/descriptor.c ****     .USBSpecification       = VERSION_BCD(1,1,0),
 234:../../tmk_core/protocol/lufa/descriptor.c ****     .Class                  = USB_CSCP_NoDeviceClass,
 235:../../tmk_core/protocol/lufa/descriptor.c ****     .SubClass               = USB_CSCP_NoDeviceSubclass,
 236:../../tmk_core/protocol/lufa/descriptor.c ****     .Protocol               = USB_CSCP_NoDeviceProtocol,
 237:../../tmk_core/protocol/lufa/descriptor.c **** 
 238:../../tmk_core/protocol/lufa/descriptor.c ****     .Endpoint0Size          = FIXED_CONTROL_ENDPOINT_SIZE,
 239:../../tmk_core/protocol/lufa/descriptor.c **** 
 240:../../tmk_core/protocol/lufa/descriptor.c ****     /* specified in config.h */
 241:../../tmk_core/protocol/lufa/descriptor.c ****     .VendorID               = VENDOR_ID,
 242:../../tmk_core/protocol/lufa/descriptor.c ****     .ProductID              = PRODUCT_ID,
 243:../../tmk_core/protocol/lufa/descriptor.c ****     .ReleaseNumber          = DEVICE_VER,
 244:../../tmk_core/protocol/lufa/descriptor.c **** 
 245:../../tmk_core/protocol/lufa/descriptor.c ****     .ManufacturerStrIndex   = 0x01,
 246:../../tmk_core/protocol/lufa/descriptor.c ****     .ProductStrIndex        = 0x02,
 247:../../tmk_core/protocol/lufa/descriptor.c ****     .SerialNumStrIndex      = NO_DESCRIPTOR,
 248:../../tmk_core/protocol/lufa/descriptor.c **** 
 249:../../tmk_core/protocol/lufa/descriptor.c ****     .NumberOfConfigurations = FIXED_NUM_CONFIGURATIONS
 250:../../tmk_core/protocol/lufa/descriptor.c **** };
 251:../../tmk_core/protocol/lufa/descriptor.c **** 
 252:../../tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
 253:../../tmk_core/protocol/lufa/descriptor.c ****  * Configuration Descriptors
 254:../../tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
 255:../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_Configuration_t PROGMEM ConfigurationDescriptor =
 256:../../tmk_core/protocol/lufa/descriptor.c **** {
 257:../../tmk_core/protocol/lufa/descriptor.c ****     .Config =
 258:../../tmk_core/protocol/lufa/descriptor.c ****         {
 259:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Configuration_Header_t), .Type
 260:../../tmk_core/protocol/lufa/descriptor.c **** 
 261:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalConfigurationSize = sizeof(USB_Descriptor_Configuration_t),
 262:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalInterfaces        = TOTAL_INTERFACES,
 263:../../tmk_core/protocol/lufa/descriptor.c **** 
 264:../../tmk_core/protocol/lufa/descriptor.c ****             .ConfigurationNumber    = 1,
 265:../../tmk_core/protocol/lufa/descriptor.c ****             .ConfigurationStrIndex  = NO_DESCRIPTOR,
 266:../../tmk_core/protocol/lufa/descriptor.c **** 
 267:../../tmk_core/protocol/lufa/descriptor.c ****             .ConfigAttributes       = (USB_CONFIG_ATTR_RESERVED | USB_CONFIG_ATTR_REMOTEWAKEUP),
 268:../../tmk_core/protocol/lufa/descriptor.c **** 
 269:../../tmk_core/protocol/lufa/descriptor.c ****             .MaxPowerConsumption    = USB_CONFIG_POWER_MA(500)
 270:../../tmk_core/protocol/lufa/descriptor.c ****         },
 271:../../tmk_core/protocol/lufa/descriptor.c **** 
 272:../../tmk_core/protocol/lufa/descriptor.c ****     /*
 273:../../tmk_core/protocol/lufa/descriptor.c ****      * Keyboard
 274:../../tmk_core/protocol/lufa/descriptor.c ****      */
 275:../../tmk_core/protocol/lufa/descriptor.c ****     .Keyboard_Interface =
 276:../../tmk_core/protocol/lufa/descriptor.c ****         {
 277:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 278:../../tmk_core/protocol/lufa/descriptor.c **** 
 279:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = KEYBOARD_INTERFACE,
 280:../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 281:../../tmk_core/protocol/lufa/descriptor.c **** 
 282:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 283:../../tmk_core/protocol/lufa/descriptor.c **** 
 284:../../tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 285:../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_BootSubclass,
 286:../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_KeyboardBootProtocol,
 287:../../tmk_core/protocol/lufa/descriptor.c **** 
 288:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 289:../../tmk_core/protocol/lufa/descriptor.c ****         },
 290:../../tmk_core/protocol/lufa/descriptor.c **** 
 291:../../tmk_core/protocol/lufa/descriptor.c ****     .Keyboard_HID =
 292:../../tmk_core/protocol/lufa/descriptor.c ****         {
 293:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 294:../../tmk_core/protocol/lufa/descriptor.c **** 
 295:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 296:../../tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 297:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 298:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 299:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(KeyboardReport)
 300:../../tmk_core/protocol/lufa/descriptor.c ****         },
 301:../../tmk_core/protocol/lufa/descriptor.c **** 
 302:../../tmk_core/protocol/lufa/descriptor.c ****     .Keyboard_INEndpoint =
 303:../../tmk_core/protocol/lufa/descriptor.c ****         {
 304:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 305:../../tmk_core/protocol/lufa/descriptor.c **** 
 306:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | KEYBOARD_IN_EPNUM),
 307:../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 308:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = KEYBOARD_EPSIZE,
 309:../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 310:../../tmk_core/protocol/lufa/descriptor.c ****         },
 311:../../tmk_core/protocol/lufa/descriptor.c **** 
 312:../../tmk_core/protocol/lufa/descriptor.c ****     /*
 313:../../tmk_core/protocol/lufa/descriptor.c ****      * Mouse
 314:../../tmk_core/protocol/lufa/descriptor.c ****      */
 315:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 316:../../tmk_core/protocol/lufa/descriptor.c ****     .Mouse_Interface =
 317:../../tmk_core/protocol/lufa/descriptor.c ****         {
 318:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 319:../../tmk_core/protocol/lufa/descriptor.c **** 
 320:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = MOUSE_INTERFACE,
 321:../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 322:../../tmk_core/protocol/lufa/descriptor.c **** 
 323:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 324:../../tmk_core/protocol/lufa/descriptor.c **** 
 325:../../tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 326:../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_BootSubclass,
 327:../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_MouseBootProtocol,
 328:../../tmk_core/protocol/lufa/descriptor.c **** 
 329:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 330:../../tmk_core/protocol/lufa/descriptor.c ****         },
 331:../../tmk_core/protocol/lufa/descriptor.c **** 
 332:../../tmk_core/protocol/lufa/descriptor.c ****     .Mouse_HID =
 333:../../tmk_core/protocol/lufa/descriptor.c ****         {
 334:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 335:../../tmk_core/protocol/lufa/descriptor.c **** 
 336:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 337:../../tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 338:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 339:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 340:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(MouseReport)
 341:../../tmk_core/protocol/lufa/descriptor.c ****         },
 342:../../tmk_core/protocol/lufa/descriptor.c **** 
 343:../../tmk_core/protocol/lufa/descriptor.c ****     .Mouse_INEndpoint =
 344:../../tmk_core/protocol/lufa/descriptor.c ****         {
 345:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 346:../../tmk_core/protocol/lufa/descriptor.c **** 
 347:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | MOUSE_IN_EPNUM),
 348:../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 349:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = MOUSE_EPSIZE,
 350:../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 351:../../tmk_core/protocol/lufa/descriptor.c ****         },
 352:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 353:../../tmk_core/protocol/lufa/descriptor.c **** 
 354:../../tmk_core/protocol/lufa/descriptor.c ****     /*
 355:../../tmk_core/protocol/lufa/descriptor.c ****      * Extra
 356:../../tmk_core/protocol/lufa/descriptor.c ****      */
 357:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 358:../../tmk_core/protocol/lufa/descriptor.c ****     .Extrakey_Interface =
 359:../../tmk_core/protocol/lufa/descriptor.c ****         {
 360:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 361:../../tmk_core/protocol/lufa/descriptor.c **** 
 362:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = EXTRAKEY_INTERFACE,
 363:../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 364:../../tmk_core/protocol/lufa/descriptor.c **** 
 365:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 366:../../tmk_core/protocol/lufa/descriptor.c **** 
 367:../../tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 368:../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 369:../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 370:../../tmk_core/protocol/lufa/descriptor.c **** 
 371:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 372:../../tmk_core/protocol/lufa/descriptor.c ****         },
 373:../../tmk_core/protocol/lufa/descriptor.c **** 
 374:../../tmk_core/protocol/lufa/descriptor.c ****     .Extrakey_HID =
 375:../../tmk_core/protocol/lufa/descriptor.c ****         {
 376:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 377:../../tmk_core/protocol/lufa/descriptor.c **** 
 378:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 379:../../tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 380:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 381:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 382:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(ExtrakeyReport)
 383:../../tmk_core/protocol/lufa/descriptor.c ****         },
 384:../../tmk_core/protocol/lufa/descriptor.c **** 
 385:../../tmk_core/protocol/lufa/descriptor.c ****     .Extrakey_INEndpoint =
 386:../../tmk_core/protocol/lufa/descriptor.c ****         {
 387:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 388:../../tmk_core/protocol/lufa/descriptor.c **** 
 389:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | EXTRAKEY_IN_EPNUM),
 390:../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 391:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = EXTRAKEY_EPSIZE,
 392:../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 393:../../tmk_core/protocol/lufa/descriptor.c ****         },
 394:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 395:../../tmk_core/protocol/lufa/descriptor.c **** 
 396:../../tmk_core/protocol/lufa/descriptor.c ****     /*
 397:../../tmk_core/protocol/lufa/descriptor.c ****      * Console
 398:../../tmk_core/protocol/lufa/descriptor.c ****      */
 399:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 400:../../tmk_core/protocol/lufa/descriptor.c ****     .Console_Interface =
 401:../../tmk_core/protocol/lufa/descriptor.c ****         {
 402:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 403:../../tmk_core/protocol/lufa/descriptor.c **** 
 404:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = CONSOLE_INTERFACE,
 405:../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 406:../../tmk_core/protocol/lufa/descriptor.c **** 
 407:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 2,
 408:../../tmk_core/protocol/lufa/descriptor.c **** 
 409:../../tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 410:../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 411:../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 412:../../tmk_core/protocol/lufa/descriptor.c **** 
 413:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 414:../../tmk_core/protocol/lufa/descriptor.c ****         },
 415:../../tmk_core/protocol/lufa/descriptor.c **** 
 416:../../tmk_core/protocol/lufa/descriptor.c ****     .Console_HID =
 417:../../tmk_core/protocol/lufa/descriptor.c ****         {
 418:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 419:../../tmk_core/protocol/lufa/descriptor.c **** 
 420:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 421:../../tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 422:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 423:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 424:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(ConsoleReport)
 425:../../tmk_core/protocol/lufa/descriptor.c ****         },
 426:../../tmk_core/protocol/lufa/descriptor.c **** 
 427:../../tmk_core/protocol/lufa/descriptor.c ****     .Console_INEndpoint =
 428:../../tmk_core/protocol/lufa/descriptor.c ****         {
 429:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 430:../../tmk_core/protocol/lufa/descriptor.c **** 
 431:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | CONSOLE_IN_EPNUM),
 432:../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 433:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = CONSOLE_EPSIZE,
 434:../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 435:../../tmk_core/protocol/lufa/descriptor.c ****         },
 436:../../tmk_core/protocol/lufa/descriptor.c **** 
 437:../../tmk_core/protocol/lufa/descriptor.c ****     .Console_OUTEndpoint =
 438:../../tmk_core/protocol/lufa/descriptor.c ****         {
 439:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 440:../../tmk_core/protocol/lufa/descriptor.c **** 
 441:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_OUT | CONSOLE_OUT_EPNUM),
 442:../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 443:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = CONSOLE_EPSIZE,
 444:../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 445:../../tmk_core/protocol/lufa/descriptor.c ****         },
 446:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 447:../../tmk_core/protocol/lufa/descriptor.c **** 
 448:../../tmk_core/protocol/lufa/descriptor.c ****     /*
 449:../../tmk_core/protocol/lufa/descriptor.c ****      * NKRO
 450:../../tmk_core/protocol/lufa/descriptor.c ****      */
 451:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 452:../../tmk_core/protocol/lufa/descriptor.c ****     .NKRO_Interface =
 453:../../tmk_core/protocol/lufa/descriptor.c ****         {
 454:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 455:../../tmk_core/protocol/lufa/descriptor.c **** 
 456:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = NKRO_INTERFACE,
 457:../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 458:../../tmk_core/protocol/lufa/descriptor.c **** 
 459:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 460:../../tmk_core/protocol/lufa/descriptor.c **** 
 461:../../tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 462:../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 463:../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 464:../../tmk_core/protocol/lufa/descriptor.c **** 
 465:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 466:../../tmk_core/protocol/lufa/descriptor.c ****         },
 467:../../tmk_core/protocol/lufa/descriptor.c **** 
 468:../../tmk_core/protocol/lufa/descriptor.c ****     .NKRO_HID =
 469:../../tmk_core/protocol/lufa/descriptor.c ****         {
 470:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 471:../../tmk_core/protocol/lufa/descriptor.c **** 
 472:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 473:../../tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 474:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 475:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 476:../../tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(NKROReport)
 477:../../tmk_core/protocol/lufa/descriptor.c ****         },
 478:../../tmk_core/protocol/lufa/descriptor.c **** 
 479:../../tmk_core/protocol/lufa/descriptor.c ****     .NKRO_INEndpoint =
 480:../../tmk_core/protocol/lufa/descriptor.c ****         {
 481:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 482:../../tmk_core/protocol/lufa/descriptor.c **** 
 483:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | NKRO_IN_EPNUM),
 484:../../tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 485:../../tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = NKRO_EPSIZE,
 486:../../tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 487:../../tmk_core/protocol/lufa/descriptor.c ****         },
 488:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 489:../../tmk_core/protocol/lufa/descriptor.c **** 
 490:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef MIDI_ENABLE
 491:../../tmk_core/protocol/lufa/descriptor.c ****     .Audio_ControlInterface =
 492:../../tmk_core/protocol/lufa/descriptor.c ****         {
 493:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_
 494:../../tmk_core/protocol/lufa/descriptor.c **** 
 495:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber          = AC_INTERFACE,
 496:../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting         = 0,
 497:../../tmk_core/protocol/lufa/descriptor.c **** 
 498:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints           = 0,
 499:../../tmk_core/protocol/lufa/descriptor.c **** 
 500:../../tmk_core/protocol/lufa/descriptor.c ****             .Class                    = AUDIO_CSCP_AudioClass,
 501:../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass                 = AUDIO_CSCP_ControlSubclass,
 502:../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol                 = AUDIO_CSCP_ControlProtocol,
 503:../../tmk_core/protocol/lufa/descriptor.c **** 
 504:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex        = NO_DESCRIPTOR
 505:../../tmk_core/protocol/lufa/descriptor.c ****         },
 506:../../tmk_core/protocol/lufa/descriptor.c **** 
 507:../../tmk_core/protocol/lufa/descriptor.c ****     .Audio_ControlInterface_SPC =
 508:../../tmk_core/protocol/lufa/descriptor.c ****         {
 509:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_Audio_Descriptor_Interface_AC_t), .Type
 510:../../tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_Header,
 511:../../tmk_core/protocol/lufa/descriptor.c **** 
 512:../../tmk_core/protocol/lufa/descriptor.c ****             .ACSpecification          = VERSION_BCD(1,0,0),
 513:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalLength              = sizeof(USB_Audio_Descriptor_Interface_AC_t),
 514:../../tmk_core/protocol/lufa/descriptor.c **** 
 515:../../tmk_core/protocol/lufa/descriptor.c ****             .InCollection             = 1,
 516:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber          = AS_INTERFACE,
 517:../../tmk_core/protocol/lufa/descriptor.c ****         },
 518:../../tmk_core/protocol/lufa/descriptor.c **** 
 519:../../tmk_core/protocol/lufa/descriptor.c ****     .Audio_StreamInterface =
 520:../../tmk_core/protocol/lufa/descriptor.c ****         {
 521:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_
 522:../../tmk_core/protocol/lufa/descriptor.c **** 
 523:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber          = AS_INTERFACE,
 524:../../tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting         = 0,
 525:../../tmk_core/protocol/lufa/descriptor.c **** 
 526:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints           = 2,
 527:../../tmk_core/protocol/lufa/descriptor.c **** 
 528:../../tmk_core/protocol/lufa/descriptor.c ****             .Class                    = AUDIO_CSCP_AudioClass,
 529:../../tmk_core/protocol/lufa/descriptor.c ****             .SubClass                 = AUDIO_CSCP_MIDIStreamingSubclass,
 530:../../tmk_core/protocol/lufa/descriptor.c ****             .Protocol                 = AUDIO_CSCP_StreamingProtocol,
 531:../../tmk_core/protocol/lufa/descriptor.c **** 
 532:../../tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex        = NO_DESCRIPTOR
 533:../../tmk_core/protocol/lufa/descriptor.c ****         },
 534:../../tmk_core/protocol/lufa/descriptor.c **** 
 535:../../tmk_core/protocol/lufa/descriptor.c ****     .Audio_StreamInterface_SPC =
 536:../../tmk_core/protocol/lufa/descriptor.c ****         {
 537:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_AudioInterface_AS_t), .
 538:../../tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_General,
 539:../../tmk_core/protocol/lufa/descriptor.c **** 
 540:../../tmk_core/protocol/lufa/descriptor.c ****             .AudioSpecification       = VERSION_BCD(1,0,0),
 541:../../tmk_core/protocol/lufa/descriptor.c **** 
 542:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalLength              = (sizeof(USB_Descriptor_Configuration_t) -
 543:../../tmk_core/protocol/lufa/descriptor.c ****                                          offsetof(USB_Descriptor_Configuration_t, Audio_StreamInter
 544:../../tmk_core/protocol/lufa/descriptor.c ****         },
 545:../../tmk_core/protocol/lufa/descriptor.c **** 
 546:../../tmk_core/protocol/lufa/descriptor.c ****     .MIDI_In_Jack_Emb =
 547:../../tmk_core/protocol/lufa/descriptor.c ****         {
 548:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_InputJack_t), .Type = D
 549:../../tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_InputTerminal,
 550:../../tmk_core/protocol/lufa/descriptor.c **** 
 551:../../tmk_core/protocol/lufa/descriptor.c ****             .JackType                 = MIDI_JACKTYPE_Embedded,
 552:../../tmk_core/protocol/lufa/descriptor.c ****             .JackID                   = 0x01,
 553:../../tmk_core/protocol/lufa/descriptor.c **** 
 554:../../tmk_core/protocol/lufa/descriptor.c ****             .JackStrIndex             = NO_DESCRIPTOR
 555:../../tmk_core/protocol/lufa/descriptor.c ****         },
 556:../../tmk_core/protocol/lufa/descriptor.c **** 
 557:../../tmk_core/protocol/lufa/descriptor.c ****     .MIDI_In_Jack_Ext =
 558:../../tmk_core/protocol/lufa/descriptor.c ****         {
 559:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_InputJack_t), .Type = D
 560:../../tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_InputTerminal,
 561:../../tmk_core/protocol/lufa/descriptor.c **** 
 562:../../tmk_core/protocol/lufa/descriptor.c ****             .JackType                 = MIDI_JACKTYPE_External,
 563:../../tmk_core/protocol/lufa/descriptor.c ****             .JackID                   = 0x02,
 564:../../tmk_core/protocol/lufa/descriptor.c **** 
 565:../../tmk_core/protocol/lufa/descriptor.c ****             .JackStrIndex             = NO_DESCRIPTOR
 566:../../tmk_core/protocol/lufa/descriptor.c ****         },
 567:../../tmk_core/protocol/lufa/descriptor.c **** 
 568:../../tmk_core/protocol/lufa/descriptor.c ****     .MIDI_Out_Jack_Emb =
 569:../../tmk_core/protocol/lufa/descriptor.c ****         {
 570:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_OutputJack_t), .Type = 
 571:../../tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_OutputTerminal,
 572:../../tmk_core/protocol/lufa/descriptor.c **** 
 573:../../tmk_core/protocol/lufa/descriptor.c ****             .JackType                 = MIDI_JACKTYPE_Embedded,
 574:../../tmk_core/protocol/lufa/descriptor.c ****             .JackID                   = 0x03,
 575:../../tmk_core/protocol/lufa/descriptor.c **** 
 576:../../tmk_core/protocol/lufa/descriptor.c ****             .NumberOfPins             = 1,
 577:../../tmk_core/protocol/lufa/descriptor.c ****             .SourceJackID             = {0x02},
 578:../../tmk_core/protocol/lufa/descriptor.c ****             .SourcePinID              = {0x01},
 579:../../tmk_core/protocol/lufa/descriptor.c **** 
 580:../../tmk_core/protocol/lufa/descriptor.c ****             .JackStrIndex             = NO_DESCRIPTOR
 581:../../tmk_core/protocol/lufa/descriptor.c ****         },
 582:../../tmk_core/protocol/lufa/descriptor.c **** 
 583:../../tmk_core/protocol/lufa/descriptor.c ****     .MIDI_Out_Jack_Ext =
 584:../../tmk_core/protocol/lufa/descriptor.c ****         {
 585:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_OutputJack_t), .Type = 
 586:../../tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_OutputTerminal,
 587:../../tmk_core/protocol/lufa/descriptor.c **** 
 588:../../tmk_core/protocol/lufa/descriptor.c ****             .JackType                 = MIDI_JACKTYPE_External,
 589:../../tmk_core/protocol/lufa/descriptor.c ****             .JackID                   = 0x04,
 590:../../tmk_core/protocol/lufa/descriptor.c **** 
 591:../../tmk_core/protocol/lufa/descriptor.c ****             .NumberOfPins             = 1,
 592:../../tmk_core/protocol/lufa/descriptor.c ****             .SourceJackID             = {0x01},
 593:../../tmk_core/protocol/lufa/descriptor.c ****             .SourcePinID              = {0x01},
 594:../../tmk_core/protocol/lufa/descriptor.c **** 
 595:../../tmk_core/protocol/lufa/descriptor.c ****             .JackStrIndex             = NO_DESCRIPTOR
 596:../../tmk_core/protocol/lufa/descriptor.c ****         },
 597:../../tmk_core/protocol/lufa/descriptor.c **** 
 598:../../tmk_core/protocol/lufa/descriptor.c ****     .MIDI_In_Jack_Endpoint =
 599:../../tmk_core/protocol/lufa/descriptor.c ****         {
 600:../../tmk_core/protocol/lufa/descriptor.c ****             .Endpoint =
 601:../../tmk_core/protocol/lufa/descriptor.c ****                 {
 602:../../tmk_core/protocol/lufa/descriptor.c ****                     .Header              = {.Size = sizeof(USB_Audio_Descriptor_StreamEndpoint_Std_
 603:../../tmk_core/protocol/lufa/descriptor.c **** 
 604:../../tmk_core/protocol/lufa/descriptor.c ****                     .EndpointAddress     = MIDI_STREAM_OUT_EPADDR,
 605:../../tmk_core/protocol/lufa/descriptor.c ****                     .Attributes          = (EP_TYPE_BULK | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 606:../../tmk_core/protocol/lufa/descriptor.c ****                     .EndpointSize        = MIDI_STREAM_EPSIZE,
 607:../../tmk_core/protocol/lufa/descriptor.c ****                     .PollingIntervalMS   = 0x05
 608:../../tmk_core/protocol/lufa/descriptor.c ****                 },
 609:../../tmk_core/protocol/lufa/descriptor.c **** 
 610:../../tmk_core/protocol/lufa/descriptor.c ****             .Refresh                  = 0,
 611:../../tmk_core/protocol/lufa/descriptor.c ****             .SyncEndpointNumber       = 0
 612:../../tmk_core/protocol/lufa/descriptor.c ****         },
 613:../../tmk_core/protocol/lufa/descriptor.c **** 
 614:../../tmk_core/protocol/lufa/descriptor.c ****     .MIDI_In_Jack_Endpoint_SPC =
 615:../../tmk_core/protocol/lufa/descriptor.c ****         {
 616:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_Jack_Endpoint_t), .Type
 617:../../tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSEndpoint_General,
 618:../../tmk_core/protocol/lufa/descriptor.c **** 
 619:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEmbeddedJacks       = 0x01,
 620:../../tmk_core/protocol/lufa/descriptor.c ****             .AssociatedJackID         = {0x01}
 621:../../tmk_core/protocol/lufa/descriptor.c ****         },
 622:../../tmk_core/protocol/lufa/descriptor.c **** 
 623:../../tmk_core/protocol/lufa/descriptor.c ****     .MIDI_Out_Jack_Endpoint =
 624:../../tmk_core/protocol/lufa/descriptor.c ****         {
 625:../../tmk_core/protocol/lufa/descriptor.c ****             .Endpoint =
 626:../../tmk_core/protocol/lufa/descriptor.c ****                 {
 627:../../tmk_core/protocol/lufa/descriptor.c ****                     .Header              = {.Size = sizeof(USB_Audio_Descriptor_StreamEndpoint_Std_
 628:../../tmk_core/protocol/lufa/descriptor.c **** 
 629:../../tmk_core/protocol/lufa/descriptor.c ****                     .EndpointAddress     = MIDI_STREAM_IN_EPADDR,
 630:../../tmk_core/protocol/lufa/descriptor.c ****                     .Attributes          = (EP_TYPE_BULK | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 631:../../tmk_core/protocol/lufa/descriptor.c ****                     .EndpointSize        = MIDI_STREAM_EPSIZE,
 632:../../tmk_core/protocol/lufa/descriptor.c ****                     .PollingIntervalMS   = 0x05
 633:../../tmk_core/protocol/lufa/descriptor.c ****                 },
 634:../../tmk_core/protocol/lufa/descriptor.c **** 
 635:../../tmk_core/protocol/lufa/descriptor.c ****             .Refresh                  = 0,
 636:../../tmk_core/protocol/lufa/descriptor.c ****             .SyncEndpointNumber       = 0
 637:../../tmk_core/protocol/lufa/descriptor.c ****         },
 638:../../tmk_core/protocol/lufa/descriptor.c **** 
 639:../../tmk_core/protocol/lufa/descriptor.c ****     .MIDI_Out_Jack_Endpoint_SPC =
 640:../../tmk_core/protocol/lufa/descriptor.c ****         {
 641:../../tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_Jack_Endpoint_t), .Type
 642:../../tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSEndpoint_General,
 643:../../tmk_core/protocol/lufa/descriptor.c **** 
 644:../../tmk_core/protocol/lufa/descriptor.c ****             .TotalEmbeddedJacks       = 0x01,
 645:../../tmk_core/protocol/lufa/descriptor.c ****             .AssociatedJackID         = {0x03}
 646:../../tmk_core/protocol/lufa/descriptor.c ****         }
 647:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 648:../../tmk_core/protocol/lufa/descriptor.c **** };
 649:../../tmk_core/protocol/lufa/descriptor.c **** 
 650:../../tmk_core/protocol/lufa/descriptor.c **** 
 651:../../tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
 652:../../tmk_core/protocol/lufa/descriptor.c ****  * String Descriptors
 653:../../tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
 654:../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM LanguageString =
 655:../../tmk_core/protocol/lufa/descriptor.c **** {
 656:../../tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(1), .Type = DTYPE_String},
 657:../../tmk_core/protocol/lufa/descriptor.c **** 
 658:../../tmk_core/protocol/lufa/descriptor.c ****     .UnicodeString          = {LANGUAGE_ID_ENG}
 659:../../tmk_core/protocol/lufa/descriptor.c **** };
 660:../../tmk_core/protocol/lufa/descriptor.c **** 
 661:../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM ManufacturerString =
 662:../../tmk_core/protocol/lufa/descriptor.c **** {
 663:../../tmk_core/protocol/lufa/descriptor.c ****     /* subtract 1 for null terminator */
 664:../../tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(sizeof(STR(MANUFACTURER))-1), .Type = DTYPE_S
 665:../../tmk_core/protocol/lufa/descriptor.c **** 
 666:../../tmk_core/protocol/lufa/descriptor.c ****     .UnicodeString          = LSTR(MANUFACTURER)
 667:../../tmk_core/protocol/lufa/descriptor.c **** };
 668:../../tmk_core/protocol/lufa/descriptor.c **** 
 669:../../tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM ProductString =
 670:../../tmk_core/protocol/lufa/descriptor.c **** {
 671:../../tmk_core/protocol/lufa/descriptor.c ****     /* subtract 1 for null terminator */
 672:../../tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(sizeof(STR(PRODUCT))-1), .Type = DTYPE_String
 673:../../tmk_core/protocol/lufa/descriptor.c **** 
 674:../../tmk_core/protocol/lufa/descriptor.c ****     .UnicodeString          = LSTR(PRODUCT)
 675:../../tmk_core/protocol/lufa/descriptor.c **** };
 676:../../tmk_core/protocol/lufa/descriptor.c **** 
 677:../../tmk_core/protocol/lufa/descriptor.c **** 
 678:../../tmk_core/protocol/lufa/descriptor.c **** /** This function is called by the library when in device mode, and must be overridden (see library
 679:../../tmk_core/protocol/lufa/descriptor.c ****  *  documentation) by the application code so that the address and size of a requested descriptor c
 680:../../tmk_core/protocol/lufa/descriptor.c ****  *  to the USB library. When the device receives a Get Descriptor request on the control endpoint, 
 681:../../tmk_core/protocol/lufa/descriptor.c ****  *  is called so that the descriptor details can be passed back and the appropriate descriptor sent
 682:../../tmk_core/protocol/lufa/descriptor.c ****  *  USB host.
 683:../../tmk_core/protocol/lufa/descriptor.c ****  */
 684:../../tmk_core/protocol/lufa/descriptor.c **** uint16_t CALLBACK_USB_GetDescriptor(const uint16_t wValue,
 685:../../tmk_core/protocol/lufa/descriptor.c ****                                     const uint8_t wIndex,
 686:../../tmk_core/protocol/lufa/descriptor.c ****                                     const void** const DescriptorAddress)
 687:../../tmk_core/protocol/lufa/descriptor.c **** {
  16               		.loc 1 687 0
  17               		.cfi_startproc
  18               	.LVL0:
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
 688:../../tmk_core/protocol/lufa/descriptor.c ****     const uint8_t  DescriptorType   = (wValue >> 8);
 689:../../tmk_core/protocol/lufa/descriptor.c ****     const uint8_t  DescriptorIndex  = (wValue & 0xFF);
 690:../../tmk_core/protocol/lufa/descriptor.c **** 
 691:../../tmk_core/protocol/lufa/descriptor.c ****     const void* Address = NULL;
 692:../../tmk_core/protocol/lufa/descriptor.c ****     uint16_t    Size    = NO_DESCRIPTOR;
 693:../../tmk_core/protocol/lufa/descriptor.c **** 
 694:../../tmk_core/protocol/lufa/descriptor.c ****     switch (DescriptorType)
 695:../../tmk_core/protocol/lufa/descriptor.c ****     {
 696:../../tmk_core/protocol/lufa/descriptor.c ****         case DTYPE_Device:
 697:../../tmk_core/protocol/lufa/descriptor.c ****             Address = &DeviceDescriptor;
 698:../../tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Device_t);
 699:../../tmk_core/protocol/lufa/descriptor.c ****             break;
 700:../../tmk_core/protocol/lufa/descriptor.c ****         case DTYPE_Configuration:
 701:../../tmk_core/protocol/lufa/descriptor.c ****             Address = &ConfigurationDescriptor;
 702:../../tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Configuration_t);
 703:../../tmk_core/protocol/lufa/descriptor.c ****             break;
 704:../../tmk_core/protocol/lufa/descriptor.c ****         case DTYPE_String:
 705:../../tmk_core/protocol/lufa/descriptor.c ****             switch (DescriptorIndex )
 706:../../tmk_core/protocol/lufa/descriptor.c ****             {
 707:../../tmk_core/protocol/lufa/descriptor.c ****                 case 0x00:
 708:../../tmk_core/protocol/lufa/descriptor.c ****                     Address = &LanguageString;
 709:../../tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&LanguageString.Header.Size);
 710:../../tmk_core/protocol/lufa/descriptor.c ****                     break;
 711:../../tmk_core/protocol/lufa/descriptor.c ****                 case 0x01:
 712:../../tmk_core/protocol/lufa/descriptor.c ****                     Address = &ManufacturerString;
 713:../../tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ManufacturerString.Header.Size);
 714:../../tmk_core/protocol/lufa/descriptor.c ****                     break;
 715:../../tmk_core/protocol/lufa/descriptor.c ****                 case 0x02:
 716:../../tmk_core/protocol/lufa/descriptor.c ****                     Address = &ProductString;
 717:../../tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ProductString.Header.Size);
 718:../../tmk_core/protocol/lufa/descriptor.c ****                     break;
 719:../../tmk_core/protocol/lufa/descriptor.c ****             }
 720:../../tmk_core/protocol/lufa/descriptor.c ****             break;
 721:../../tmk_core/protocol/lufa/descriptor.c ****         case HID_DTYPE_HID:
 722:../../tmk_core/protocol/lufa/descriptor.c ****             switch (wIndex) {
 723:../../tmk_core/protocol/lufa/descriptor.c ****             case KEYBOARD_INTERFACE:
 724:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Keyboard_HID;
 725:../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 726:../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 727:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 728:../../tmk_core/protocol/lufa/descriptor.c ****             case MOUSE_INTERFACE:
 729:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Mouse_HID;
 730:../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 731:../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 732:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 733:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 734:../../tmk_core/protocol/lufa/descriptor.c ****             case EXTRAKEY_INTERFACE:
 735:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Extrakey_HID;
 736:../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 737:../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 738:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 739:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 740:../../tmk_core/protocol/lufa/descriptor.c ****             case CONSOLE_INTERFACE:
 741:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Console_HID;
 742:../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 743:../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 744:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 745:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 746:../../tmk_core/protocol/lufa/descriptor.c ****             case NKRO_INTERFACE:
 747:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.NKRO_HID;
 748:../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 749:../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 750:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 751:../../tmk_core/protocol/lufa/descriptor.c ****             }
 752:../../tmk_core/protocol/lufa/descriptor.c ****             break;
 753:../../tmk_core/protocol/lufa/descriptor.c ****         case HID_DTYPE_Report:
 754:../../tmk_core/protocol/lufa/descriptor.c ****             switch (wIndex) {
 755:../../tmk_core/protocol/lufa/descriptor.c ****             case KEYBOARD_INTERFACE:
 756:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &KeyboardReport;
 757:../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(KeyboardReport);
 758:../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 759:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 760:../../tmk_core/protocol/lufa/descriptor.c ****             case MOUSE_INTERFACE:
 761:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &MouseReport;
 762:../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(MouseReport);
 763:../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 764:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 765:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 766:../../tmk_core/protocol/lufa/descriptor.c ****             case EXTRAKEY_INTERFACE:
 767:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ExtrakeyReport;
 768:../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(ExtrakeyReport);
 769:../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 770:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 771:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 772:../../tmk_core/protocol/lufa/descriptor.c ****             case CONSOLE_INTERFACE:
 773:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConsoleReport;
 774:../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(ConsoleReport);
 775:../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 776:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 777:../../tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 778:../../tmk_core/protocol/lufa/descriptor.c ****             case NKRO_INTERFACE:
 779:../../tmk_core/protocol/lufa/descriptor.c ****                 Address = &NKROReport;
 780:../../tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(NKROReport);
 781:../../tmk_core/protocol/lufa/descriptor.c ****                 break;
 782:../../tmk_core/protocol/lufa/descriptor.c **** #endif
 783:../../tmk_core/protocol/lufa/descriptor.c ****             }
 784:../../tmk_core/protocol/lufa/descriptor.c ****             break;
 785:../../tmk_core/protocol/lufa/descriptor.c ****     }
 786:../../tmk_core/protocol/lufa/descriptor.c **** 
 787:../../tmk_core/protocol/lufa/descriptor.c ****     *DescriptorAddress = Address;
 788:../../tmk_core/protocol/lufa/descriptor.c ****     return Size;
 789:../../tmk_core/protocol/lufa/descriptor.c **** }
  23               		.loc 1 789 0
  24 0000 292F      		mov r18,r25
  25 0002 3327      		clr r19
 694:../../tmk_core/protocol/lufa/descriptor.c ****     switch (DescriptorType)
  26               		.loc 1 694 0
  27 0004 2330      		cpi r18,3
  28 0006 3105      		cpc r19,__zero_reg__
  29 0008 01F0      		breq .L5
  30 000a 04F4      		brge .L8
  31 000c 2130      		cpi r18,1
  32 000e 3105      		cpc r19,__zero_reg__
  33 0010 01F4      		brne .+2
  34 0012 00C0      		rjmp .L12
  35 0014 2230      		cpi r18,2
  36 0016 3105      		cpc r19,__zero_reg__
  37 0018 01F0      		breq .+2
  38 001a 00C0      		rjmp .L15
  39 001c 00C0      		rjmp .L4
  40               	.L8:
  41 001e 2132      		cpi r18,33
  42 0020 3105      		cpc r19,__zero_reg__
  43 0022 01F0      		breq .L6
  44 0024 2232      		cpi r18,34
  45 0026 3105      		cpc r19,__zero_reg__
  46 0028 01F0      		breq .L7
  47 002a 00C0      		rjmp .L15
  48               	.L4:
  49               	.LVL1:
 702:../../tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Configuration_t);
  50               		.loc 1 702 0
  51 002c EDE8      		ldi r30,lo8(-115)
  52 002e F0E0      		ldi r31,0
 701:../../tmk_core/protocol/lufa/descriptor.c ****             Address = &ConfigurationDescriptor;
  53               		.loc 1 701 0
  54 0030 80E0      		ldi r24,lo8(ConfigurationDescriptor)
  55 0032 90E0      		ldi r25,hi8(ConfigurationDescriptor)
  56               	.LVL2:
 703:../../tmk_core/protocol/lufa/descriptor.c ****             break;
  57               		.loc 1 703 0
  58 0034 00C0      		rjmp .L3
  59               	.LVL3:
  60               	.L5:
  61               		.loc 1 789 0
  62 0036 9927      		clr r25
  63               	.LVL4:
 705:../../tmk_core/protocol/lufa/descriptor.c ****             switch (DescriptorIndex )
  64               		.loc 1 705 0
  65 0038 8130      		cpi r24,1
  66 003a 9105      		cpc r25,__zero_reg__
  67 003c 01F0      		breq .L10
  68 003e 8230      		cpi r24,2
  69 0040 9105      		cpc r25,__zero_reg__
  70 0042 01F0      		breq .L11
  71 0044 892B      		or r24,r25
  72 0046 01F0      		breq .+2
  73 0048 00C0      		rjmp .L15
  74               	.LVL5:
  75               	.LBB2:
 709:../../tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&LanguageString.Header.Size);
  76               		.loc 1 709 0
  77 004a E0E0      		ldi r30,lo8(LanguageString)
  78 004c F0E0      		ldi r31,hi8(LanguageString)
  79               	/* #APP */
  80               	 ;  709 "../../tmk_core/protocol/lufa/descriptor.c" 1
  81 004e E491      		lpm r30, Z
  82               		
  83               	 ;  0 "" 2
  84               	.LVL6:
  85               	/* #NOAPP */
  86               	.LBE2:
  87 0050 F0E0      		ldi r31,0
  88               	.LVL7:
 708:../../tmk_core/protocol/lufa/descriptor.c ****                     Address = &LanguageString;
  89               		.loc 1 708 0
  90 0052 80E0      		ldi r24,lo8(LanguageString)
  91 0054 90E0      		ldi r25,hi8(LanguageString)
 710:../../tmk_core/protocol/lufa/descriptor.c ****                     break;
  92               		.loc 1 710 0
  93 0056 00C0      		rjmp .L3
  94               	.LVL8:
  95               	.L10:
  96               	.LBB3:
 713:../../tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ManufacturerString.Header.Size);
  97               		.loc 1 713 0
  98 0058 E0E0      		ldi r30,lo8(ManufacturerString)
  99 005a F0E0      		ldi r31,hi8(ManufacturerString)
 100               	/* #APP */
 101               	 ;  713 "../../tmk_core/protocol/lufa/descriptor.c" 1
 102 005c E491      		lpm r30, Z
 103               		
 104               	 ;  0 "" 2
 105               	.LVL9:
 106               	/* #NOAPP */
 107               	.LBE3:
 108 005e F0E0      		ldi r31,0
 109               	.LVL10:
 712:../../tmk_core/protocol/lufa/descriptor.c ****                     Address = &ManufacturerString;
 110               		.loc 1 712 0
 111 0060 80E0      		ldi r24,lo8(ManufacturerString)
 112 0062 90E0      		ldi r25,hi8(ManufacturerString)
 714:../../tmk_core/protocol/lufa/descriptor.c ****                     break;
 113               		.loc 1 714 0
 114 0064 00C0      		rjmp .L3
 115               	.LVL11:
 116               	.L11:
 117               	.LBB4:
 717:../../tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ProductString.Header.Size);
 118               		.loc 1 717 0
 119 0066 E0E0      		ldi r30,lo8(ProductString)
 120 0068 F0E0      		ldi r31,hi8(ProductString)
 121               	/* #APP */
 122               	 ;  717 "../../tmk_core/protocol/lufa/descriptor.c" 1
 123 006a E491      		lpm r30, Z
 124               		
 125               	 ;  0 "" 2
 126               	.LVL12:
 127               	/* #NOAPP */
 128               	.LBE4:
 129 006c F0E0      		ldi r31,0
 130               	.LVL13:
 716:../../tmk_core/protocol/lufa/descriptor.c ****                     Address = &ProductString;
 131               		.loc 1 716 0
 132 006e 80E0      		ldi r24,lo8(ProductString)
 133 0070 90E0      		ldi r25,hi8(ProductString)
 718:../../tmk_core/protocol/lufa/descriptor.c ****                     break;
 134               		.loc 1 718 0
 135 0072 00C0      		rjmp .L3
 136               	.LVL14:
 137               	.L6:
 138 0074 6530      		cpi r22,lo8(5)
 139 0076 00F4      		brsh .L15
 140 0078 E62F      		mov r30,r22
 141 007a F0E0      		ldi r31,0
 142 007c EE0F      		lsl r30
 143 007e FF1F      		rol r31
 144 0080 E050      		subi r30,lo8(-(CSWTCH.2))
 145 0082 F040      		sbci r31,hi8(-(CSWTCH.2))
 146 0084 8081      		ld r24,Z
 147 0086 9181      		ldd r25,Z+1
 148               	.LVL15:
 149 0088 E9E0      		ldi r30,lo8(9)
 150 008a F0E0      		ldi r31,0
 151 008c 00C0      		rjmp .L3
 152               	.LVL16:
 153               	.L7:
 154 008e 6530      		cpi r22,lo8(5)
 155 0090 00F4      		brsh .L15
 156 0092 E62F      		mov r30,r22
 157 0094 F0E0      		ldi r31,0
 158 0096 DF01      		movw r26,r30
 159 0098 AA0F      		lsl r26
 160 009a BB1F      		rol r27
 161               	.LVL17:
 162 009c A050      		subi r26,lo8(-(CSWTCH.4))
 163 009e B040      		sbci r27,hi8(-(CSWTCH.4))
 164 00a0 8D91      		ld r24,X+
 165 00a2 9C91      		ld r25,X
 166               		.loc 1 789 0
 167 00a4 E050      		subi r30,lo8(-(CSWTCH.5))
 168 00a6 F040      		sbci r31,hi8(-(CSWTCH.5))
 169 00a8 E081      		ld r30,Z
 170 00aa F0E0      		ldi r31,0
 171 00ac 00C0      		rjmp .L3
 172               	.LVL18:
 173               	.L12:
 698:../../tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Device_t);
 174               		.loc 1 698 0
 175 00ae E2E1      		ldi r30,lo8(18)
 176 00b0 F0E0      		ldi r31,0
 697:../../tmk_core/protocol/lufa/descriptor.c ****             Address = &DeviceDescriptor;
 177               		.loc 1 697 0
 178 00b2 80E0      		ldi r24,lo8(DeviceDescriptor)
 179 00b4 90E0      		ldi r25,hi8(DeviceDescriptor)
 180               	.LVL19:
 181 00b6 00C0      		rjmp .L3
 182               	.L15:
 183 00b8 E0E0      		ldi r30,0
 184 00ba F0E0      		ldi r31,0
 185 00bc 80E0      		ldi r24,0
 186 00be 90E0      		ldi r25,0
 187               	.LVL20:
 188               	.L3:
 787:../../tmk_core/protocol/lufa/descriptor.c ****     *DescriptorAddress = Address;
 189               		.loc 1 787 0
 190 00c0 DA01      		movw r26,r20
 191 00c2 8D93      		st X+,r24
 192 00c4 9C93      		st X,r25
 193               		.loc 1 789 0
 194 00c6 CF01      		movw r24,r30
 195               	.LVL21:
 196 00c8 0895      		ret
 197               		.cfi_endproc
 198               	.LFE100:
 200               	.global	ProductString
 201               		.section	.progmem.data.ProductString,"a",@progbits
 204               	ProductString:
 205 0000 1A        		.byte	26
 206 0001 03        		.byte	3
 207 0002 4700      		.string	"G"
 208 0004 4800      		.string	"H"
 209 0006 3600      		.string	"6"
 210 0008 3000      		.string	"0"
 211 000a 2000      		.string	" "
 212 000c 5200      		.string	"R"
 213 000e 4700      		.string	"G"
 214 0010 4200      		.string	"B"
 215 0012 2000      		.string	" "
 216 0014 4D00      		.string	"M"
 217 0016 4F00      		.string	"O"
 218 0018 4400      		.string	"D"
 219 001a 00        		.string	""
 220 001b 00        		.string	""
 221               	.global	ManufacturerString
 222               		.section	.progmem.data.ManufacturerString,"a",@progbits
 225               	ManufacturerString:
 226 0000 0C        		.byte	12
 227 0001 03        		.byte	3
 228 0002 5300      		.string	"S"
 229 0004 4100      		.string	"A"
 230 0006 5400      		.string	"T"
 231 0008 4100      		.string	"A"
 232 000a 4E00      		.string	"N"
 233 000c 00        		.string	""
 234 000d 00        		.string	""
 235               	.global	LanguageString
 236               		.section	.progmem.data.LanguageString,"a",@progbits
 239               	LanguageString:
 240 0000 04        		.byte	4
 241 0001 03        		.byte	3
 242 0002 0904      		.word	1033
 243               	.global	ConfigurationDescriptor
 244               		.section	.progmem.data.ConfigurationDescriptor,"a",@progbits
 247               	ConfigurationDescriptor:
 248 0000 09        		.byte	9
 249 0001 02        		.byte	2
 250 0002 8D00      		.word	141
 251 0004 05        		.byte	5
 252 0005 01        		.byte	1
 253 0006 00        		.byte	0
 254 0007 A0        		.byte	-96
 255 0008 FA        		.byte	-6
 256 0009 09        		.byte	9
 257 000a 04        		.byte	4
 258 000b 00        		.byte	0
 259 000c 00        		.byte	0
 260 000d 01        		.byte	1
 261 000e 03        		.byte	3
 262 000f 01        		.byte	1
 263 0010 01        		.byte	1
 264 0011 00        		.byte	0
 265 0012 09        		.byte	9
 266 0013 21        		.byte	33
 267 0014 1101      		.word	273
 268 0016 00        		.byte	0
 269 0017 01        		.byte	1
 270 0018 22        		.byte	34
 271 0019 3F00      		.word	63
 272 001b 07        		.byte	7
 273 001c 05        		.byte	5
 274 001d 81        		.byte	-127
 275 001e 03        		.byte	3
 276 001f 0800      		.word	8
 277 0021 0A        		.byte	10
 278 0022 09        		.byte	9
 279 0023 04        		.byte	4
 280 0024 01        		.byte	1
 281 0025 00        		.byte	0
 282 0026 01        		.byte	1
 283 0027 03        		.byte	3
 284 0028 01        		.byte	1
 285 0029 02        		.byte	2
 286 002a 00        		.byte	0
 287 002b 09        		.byte	9
 288 002c 21        		.byte	33
 289 002d 1101      		.word	273
 290 002f 00        		.byte	0
 291 0030 01        		.byte	1
 292 0031 22        		.byte	34
 293 0032 4D00      		.word	77
 294 0034 07        		.byte	7
 295 0035 05        		.byte	5
 296 0036 82        		.byte	-126
 297 0037 03        		.byte	3
 298 0038 0800      		.word	8
 299 003a 0A        		.byte	10
 300 003b 09        		.byte	9
 301 003c 04        		.byte	4
 302 003d 02        		.byte	2
 303 003e 00        		.byte	0
 304 003f 01        		.byte	1
 305 0040 03        		.byte	3
 306 0041 00        		.byte	0
 307 0042 00        		.byte	0
 308 0043 00        		.byte	0
 309 0044 09        		.byte	9
 310 0045 21        		.byte	33
 311 0046 1101      		.word	273
 312 0048 00        		.byte	0
 313 0049 01        		.byte	1
 314 004a 22        		.byte	34
 315 004b 3600      		.word	54
 316 004d 07        		.byte	7
 317 004e 05        		.byte	5
 318 004f 83        		.byte	-125
 319 0050 03        		.byte	3
 320 0051 0800      		.word	8
 321 0053 0A        		.byte	10
 322 0054 09        		.byte	9
 323 0055 04        		.byte	4
 324 0056 03        		.byte	3
 325 0057 00        		.byte	0
 326 0058 02        		.byte	2
 327 0059 03        		.byte	3
 328 005a 00        		.byte	0
 329 005b 00        		.byte	0
 330 005c 00        		.byte	0
 331 005d 09        		.byte	9
 332 005e 21        		.byte	33
 333 005f 1101      		.word	273
 334 0061 00        		.byte	0
 335 0062 01        		.byte	1
 336 0063 22        		.byte	34
 337 0064 2000      		.word	32
 338 0066 07        		.byte	7
 339 0067 05        		.byte	5
 340 0068 84        		.byte	-124
 341 0069 03        		.byte	3
 342 006a 2000      		.word	32
 343 006c 01        		.byte	1
 344 006d 07        		.byte	7
 345 006e 05        		.byte	5
 346 006f 04        		.byte	4
 347 0070 03        		.byte	3
 348 0071 2000      		.word	32
 349 0073 01        		.byte	1
 350 0074 09        		.byte	9
 351 0075 04        		.byte	4
 352 0076 04        		.byte	4
 353 0077 00        		.byte	0
 354 0078 01        		.byte	1
 355 0079 03        		.byte	3
 356 007a 00        		.byte	0
 357 007b 00        		.byte	0
 358 007c 00        		.byte	0
 359 007d 09        		.byte	9
 360 007e 21        		.byte	33
 361 007f 1101      		.word	273
 362 0081 00        		.byte	0
 363 0082 01        		.byte	1
 364 0083 22        		.byte	34
 365 0084 3900      		.word	57
 366 0086 07        		.byte	7
 367 0087 05        		.byte	5
 368 0088 85        		.byte	-123
 369 0089 03        		.byte	3
 370 008a 1000      		.word	16
 371 008c 01        		.byte	1
 372               	.global	DeviceDescriptor
 373               		.section	.progmem.data.DeviceDescriptor,"a",@progbits
 376               	DeviceDescriptor:
 377 0000 12        		.byte	18
 378 0001 01        		.byte	1
 379 0002 1001      		.word	272
 380 0004 00        		.byte	0
 381 0005 00        		.byte	0
 382 0006 00        		.byte	0
 383 0007 08        		.byte	8
 384 0008 EDFE      		.word	-275
 385 000a 6060      		.word	24672
 386 000c 0300      		.word	3
 387 000e 01        		.byte	1
 388 000f 02        		.byte	2
 389 0010 00        		.byte	0
 390 0011 01        		.byte	1
 391               	.global	NKROReport
 392               		.section	.progmem.data.NKROReport,"a",@progbits
 395               	NKROReport:
 396 0000 05        		.byte	5
 397 0001 01        		.byte	1
 398 0002 09        		.byte	9
 399 0003 06        		.byte	6
 400 0004 A1        		.byte	-95
 401 0005 01        		.byte	1
 402 0006 05        		.byte	5
 403 0007 07        		.byte	7
 404 0008 19        		.byte	25
 405 0009 E0        		.byte	-32
 406 000a 29        		.byte	41
 407 000b E7        		.byte	-25
 408 000c 15        		.byte	21
 409 000d 00        		.byte	0
 410 000e 25        		.byte	37
 411 000f 01        		.byte	1
 412 0010 95        		.byte	-107
 413 0011 08        		.byte	8
 414 0012 75        		.byte	117
 415 0013 01        		.byte	1
 416 0014 81        		.byte	-127
 417 0015 02        		.byte	2
 418 0016 05        		.byte	5
 419 0017 08        		.byte	8
 420 0018 19        		.byte	25
 421 0019 01        		.byte	1
 422 001a 29        		.byte	41
 423 001b 05        		.byte	5
 424 001c 95        		.byte	-107
 425 001d 05        		.byte	5
 426 001e 75        		.byte	117
 427 001f 01        		.byte	1
 428 0020 91        		.byte	-111
 429 0021 02        		.byte	2
 430 0022 95        		.byte	-107
 431 0023 01        		.byte	1
 432 0024 75        		.byte	117
 433 0025 03        		.byte	3
 434 0026 91        		.byte	-111
 435 0027 01        		.byte	1
 436 0028 05        		.byte	5
 437 0029 07        		.byte	7
 438 002a 19        		.byte	25
 439 002b 00        		.byte	0
 440 002c 29        		.byte	41
 441 002d 77        		.byte	119
 442 002e 15        		.byte	21
 443 002f 00        		.byte	0
 444 0030 25        		.byte	37
 445 0031 01        		.byte	1
 446 0032 95        		.byte	-107
 447 0033 78        		.byte	120
 448 0034 75        		.byte	117
 449 0035 01        		.byte	1
 450 0036 81        		.byte	-127
 451 0037 02        		.byte	2
 452 0038 C0        		.byte	-64
 453               	.global	ConsoleReport
 454               		.section	.progmem.data.ConsoleReport,"a",@progbits
 457               	ConsoleReport:
 458 0000 06        		.byte	6
 459 0001 31        		.byte	49
 460 0002 FF        		.byte	-1
 461 0003 09        		.byte	9
 462 0004 74        		.byte	116
 463 0005 A1        		.byte	-95
 464 0006 01        		.byte	1
 465 0007 09        		.byte	9
 466 0008 75        		.byte	117
 467 0009 15        		.byte	21
 468 000a 00        		.byte	0
 469 000b 25        		.byte	37
 470 000c FF        		.byte	-1
 471 000d 95        		.byte	-107
 472 000e 20        		.byte	32
 473 000f 75        		.byte	117
 474 0010 08        		.byte	8
 475 0011 81        		.byte	-127
 476 0012 02        		.byte	2
 477 0013 09        		.byte	9
 478 0014 76        		.byte	118
 479 0015 15        		.byte	21
 480 0016 00        		.byte	0
 481 0017 25        		.byte	37
 482 0018 FF        		.byte	-1
 483 0019 95        		.byte	-107
 484 001a 20        		.byte	32
 485 001b 75        		.byte	117
 486 001c 08        		.byte	8
 487 001d 91        		.byte	-111
 488 001e 02        		.byte	2
 489 001f C0        		.byte	-64
 490               	.global	ExtrakeyReport
 491               		.section	.progmem.data.ExtrakeyReport,"a",@progbits
 494               	ExtrakeyReport:
 495 0000 05        		.byte	5
 496 0001 01        		.byte	1
 497 0002 09        		.byte	9
 498 0003 80        		.byte	-128
 499 0004 A1        		.byte	-95
 500 0005 01        		.byte	1
 501 0006 85        		.byte	-123
 502 0007 02        		.byte	2
 503 0008 16        		.byte	22
 504 0009 01        		.byte	1
 505 000a 00        		.byte	0
 506 000b 26        		.byte	38
 507 000c B7        		.byte	-73
 508 000d 00        		.byte	0
 509 000e 1A        		.byte	26
 510 000f 01        		.byte	1
 511 0010 00        		.byte	0
 512 0011 2A        		.byte	42
 513 0012 B7        		.byte	-73
 514 0013 00        		.byte	0
 515 0014 75        		.byte	117
 516 0015 10        		.byte	16
 517 0016 95        		.byte	-107
 518 0017 01        		.byte	1
 519 0018 81        		.byte	-127
 520 0019 00        		.byte	0
 521 001a C0        		.byte	-64
 522 001b 05        		.byte	5
 523 001c 0C        		.byte	12
 524 001d 09        		.byte	9
 525 001e 01        		.byte	1
 526 001f A1        		.byte	-95
 527 0020 01        		.byte	1
 528 0021 85        		.byte	-123
 529 0022 03        		.byte	3
 530 0023 16        		.byte	22
 531 0024 01        		.byte	1
 532 0025 00        		.byte	0
 533 0026 26        		.byte	38
 534 0027 9C        		.byte	-100
 535 0028 02        		.byte	2
 536 0029 1A        		.byte	26
 537 002a 01        		.byte	1
 538 002b 00        		.byte	0
 539 002c 2A        		.byte	42
 540 002d 9C        		.byte	-100
 541 002e 02        		.byte	2
 542 002f 75        		.byte	117
 543 0030 10        		.byte	16
 544 0031 95        		.byte	-107
 545 0032 01        		.byte	1
 546 0033 81        		.byte	-127
 547 0034 00        		.byte	0
 548 0035 C0        		.byte	-64
 549               	.global	MouseReport
 550               		.section	.progmem.data.MouseReport,"a",@progbits
 553               	MouseReport:
 554 0000 05        		.byte	5
 555 0001 01        		.byte	1
 556 0002 09        		.byte	9
 557 0003 02        		.byte	2
 558 0004 A1        		.byte	-95
 559 0005 01        		.byte	1
 560 0006 09        		.byte	9
 561 0007 01        		.byte	1
 562 0008 A1        		.byte	-95
 563 0009 00        		.byte	0
 564 000a 05        		.byte	5
 565 000b 09        		.byte	9
 566 000c 19        		.byte	25
 567 000d 01        		.byte	1
 568 000e 29        		.byte	41
 569 000f 05        		.byte	5
 570 0010 15        		.byte	21
 571 0011 00        		.byte	0
 572 0012 25        		.byte	37
 573 0013 01        		.byte	1
 574 0014 95        		.byte	-107
 575 0015 05        		.byte	5
 576 0016 75        		.byte	117
 577 0017 01        		.byte	1
 578 0018 81        		.byte	-127
 579 0019 02        		.byte	2
 580 001a 95        		.byte	-107
 581 001b 01        		.byte	1
 582 001c 75        		.byte	117
 583 001d 03        		.byte	3
 584 001e 81        		.byte	-127
 585 001f 01        		.byte	1
 586 0020 05        		.byte	5
 587 0021 01        		.byte	1
 588 0022 09        		.byte	9
 589 0023 30        		.byte	48
 590 0024 09        		.byte	9
 591 0025 31        		.byte	49
 592 0026 15        		.byte	21
 593 0027 81        		.byte	-127
 594 0028 25        		.byte	37
 595 0029 7F        		.byte	127
 596 002a 95        		.byte	-107
 597 002b 02        		.byte	2
 598 002c 75        		.byte	117
 599 002d 08        		.byte	8
 600 002e 81        		.byte	-127
 601 002f 06        		.byte	6
 602 0030 09        		.byte	9
 603 0031 38        		.byte	56
 604 0032 15        		.byte	21
 605 0033 81        		.byte	-127
 606 0034 25        		.byte	37
 607 0035 7F        		.byte	127
 608 0036 95        		.byte	-107
 609 0037 01        		.byte	1
 610 0038 75        		.byte	117
 611 0039 08        		.byte	8
 612 003a 81        		.byte	-127
 613 003b 06        		.byte	6
 614 003c 05        		.byte	5
 615 003d 0C        		.byte	12
 616 003e 0A        		.byte	10
 617 003f 38        		.byte	56
 618 0040 02        		.byte	2
 619 0041 15        		.byte	21
 620 0042 81        		.byte	-127
 621 0043 25        		.byte	37
 622 0044 7F        		.byte	127
 623 0045 95        		.byte	-107
 624 0046 01        		.byte	1
 625 0047 75        		.byte	117
 626 0048 08        		.byte	8
 627 0049 81        		.byte	-127
 628 004a 06        		.byte	6
 629 004b C0        		.byte	-64
 630 004c C0        		.byte	-64
 631               	.global	KeyboardReport
 632               		.section	.progmem.data.KeyboardReport,"a",@progbits
 635               	KeyboardReport:
 636 0000 05        		.byte	5
 637 0001 01        		.byte	1
 638 0002 09        		.byte	9
 639 0003 06        		.byte	6
 640 0004 A1        		.byte	-95
 641 0005 01        		.byte	1
 642 0006 05        		.byte	5
 643 0007 07        		.byte	7
 644 0008 19        		.byte	25
 645 0009 E0        		.byte	-32
 646 000a 29        		.byte	41
 647 000b E7        		.byte	-25
 648 000c 15        		.byte	21
 649 000d 00        		.byte	0
 650 000e 25        		.byte	37
 651 000f 01        		.byte	1
 652 0010 95        		.byte	-107
 653 0011 08        		.byte	8
 654 0012 75        		.byte	117
 655 0013 01        		.byte	1
 656 0014 81        		.byte	-127
 657 0015 02        		.byte	2
 658 0016 95        		.byte	-107
 659 0017 01        		.byte	1
 660 0018 75        		.byte	117
 661 0019 08        		.byte	8
 662 001a 81        		.byte	-127
 663 001b 01        		.byte	1
 664 001c 05        		.byte	5
 665 001d 08        		.byte	8
 666 001e 19        		.byte	25
 667 001f 01        		.byte	1
 668 0020 29        		.byte	41
 669 0021 05        		.byte	5
 670 0022 95        		.byte	-107
 671 0023 05        		.byte	5
 672 0024 75        		.byte	117
 673 0025 01        		.byte	1
 674 0026 91        		.byte	-111
 675 0027 02        		.byte	2
 676 0028 95        		.byte	-107
 677 0029 01        		.byte	1
 678 002a 75        		.byte	117
 679 002b 03        		.byte	3
 680 002c 91        		.byte	-111
 681 002d 01        		.byte	1
 682 002e 05        		.byte	5
 683 002f 07        		.byte	7
 684 0030 19        		.byte	25
 685 0031 00        		.byte	0
 686 0032 29        		.byte	41
 687 0033 FF        		.byte	-1
 688 0034 15        		.byte	21
 689 0035 00        		.byte	0
 690 0036 25        		.byte	37
 691 0037 FF        		.byte	-1
 692 0038 95        		.byte	-107
 693 0039 06        		.byte	6
 694 003a 75        		.byte	117
 695 003b 08        		.byte	8
 696 003c 81        		.byte	-127
 697 003d 00        		.byte	0
 698 003e C0        		.byte	-64
 699               		.section	.rodata.CSWTCH.2,"a",@progbits
 702               	CSWTCH.2:
 703 0000 0000      		.word	ConfigurationDescriptor+18
 704 0002 0000      		.word	ConfigurationDescriptor+43
 705 0004 0000      		.word	ConfigurationDescriptor+68
 706 0006 0000      		.word	ConfigurationDescriptor+93
 707 0008 0000      		.word	ConfigurationDescriptor+125
 708               		.section	.rodata.CSWTCH.4,"a",@progbits
 711               	CSWTCH.4:
 712 0000 0000      		.word	KeyboardReport
 713 0002 0000      		.word	MouseReport
 714 0004 0000      		.word	ExtrakeyReport
 715 0006 0000      		.word	ConsoleReport
 716 0008 0000      		.word	NKROReport
 717               		.section	.rodata.CSWTCH.5,"a",@progbits
 720               	CSWTCH.5:
 721 0000 3F        		.byte	63
 722 0001 4D        		.byte	77
 723 0002 36        		.byte	54
 724 0003 20        		.byte	32
 725 0004 39        		.byte	57
 726               		.text
 727               	.Letext0:
 728               		.file 2 "d:\\applications\\keyboard\\avr-gcc-4.7.2-mingw32\\bin\\../lib/gcc/avr/4.7.2/../../../../
 729               		.file 3 "d:\\applications\\keyboard\\avr-gcc-4.7.2-mingw32\\bin\\../lib/gcc/avr/4.7.2/include/stdd
 730               		.file 4 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../StdDescriptors.h"
 731               		.file 5 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../Common/HIDClassCom
 732               		.file 6 "../../tmk_core/protocol/lufa/descriptor.h"
 733               		.file 7 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
DEFINED SYMBOLS
                            *ABS*:00000000 descriptor.c
C:\Users\tiny\AppData\Local\Temp\cc5MNPBv.s:2      *ABS*:0000003e __SP_H__
C:\Users\tiny\AppData\Local\Temp\cc5MNPBv.s:3      *ABS*:0000003d __SP_L__
C:\Users\tiny\AppData\Local\Temp\cc5MNPBv.s:4      *ABS*:0000003f __SREG__
C:\Users\tiny\AppData\Local\Temp\cc5MNPBv.s:5      *ABS*:00000000 __tmp_reg__
C:\Users\tiny\AppData\Local\Temp\cc5MNPBv.s:6      *ABS*:00000001 __zero_reg__
C:\Users\tiny\AppData\Local\Temp\cc5MNPBv.s:13     .text.CALLBACK_USB_GetDescriptor:00000000 CALLBACK_USB_GetDescriptor
C:\Users\tiny\AppData\Local\Temp\cc5MNPBv.s:247    .progmem.data.ConfigurationDescriptor:00000000 ConfigurationDescriptor
C:\Users\tiny\AppData\Local\Temp\cc5MNPBv.s:239    .progmem.data.LanguageString:00000000 LanguageString
C:\Users\tiny\AppData\Local\Temp\cc5MNPBv.s:225    .progmem.data.ManufacturerString:00000000 ManufacturerString
C:\Users\tiny\AppData\Local\Temp\cc5MNPBv.s:204    .progmem.data.ProductString:00000000 ProductString
C:\Users\tiny\AppData\Local\Temp\cc5MNPBv.s:702    .rodata.CSWTCH.2:00000000 CSWTCH.2
C:\Users\tiny\AppData\Local\Temp\cc5MNPBv.s:711    .rodata.CSWTCH.4:00000000 CSWTCH.4
C:\Users\tiny\AppData\Local\Temp\cc5MNPBv.s:720    .rodata.CSWTCH.5:00000000 CSWTCH.5
C:\Users\tiny\AppData\Local\Temp\cc5MNPBv.s:376    .progmem.data.DeviceDescriptor:00000000 DeviceDescriptor
C:\Users\tiny\AppData\Local\Temp\cc5MNPBv.s:395    .progmem.data.NKROReport:00000000 NKROReport
C:\Users\tiny\AppData\Local\Temp\cc5MNPBv.s:457    .progmem.data.ConsoleReport:00000000 ConsoleReport
C:\Users\tiny\AppData\Local\Temp\cc5MNPBv.s:494    .progmem.data.ExtrakeyReport:00000000 ExtrakeyReport
C:\Users\tiny\AppData\Local\Temp\cc5MNPBv.s:553    .progmem.data.MouseReport:00000000 MouseReport
C:\Users\tiny\AppData\Local\Temp\cc5MNPBv.s:635    .progmem.data.KeyboardReport:00000000 KeyboardReport

UNDEFINED SYMBOLS
__do_copy_data
